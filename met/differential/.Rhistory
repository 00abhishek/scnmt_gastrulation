setnames(c("ens_id","symbol"),c("id","gene"))
# Load accessibility data
data <- lapply(opts$annos, function(n) fread(sprintf("zcat < %s/acc_data_%s.tsv.gz",io$data.dir,n), showProgress=F)) %>% rbindlist
# data <- fread(sprintf("zcat < %s",io$data.file), showProgress=F) %>% .[sample%in%opts$cells & anno%in%opts$annos] %>% .[,anno:=factor(anno, levels=opts$annos)]
# Load genomic features
feature_metadata <- lapply(opts$annos, function(n) fread(sprintf("%s/%s.bed",io$features.dir,n), showProgress=F)) %>% rbindlist
colnames(feature_metadata) <- c("chr","start","end","strand","id","anno")
# Merge accessibility data and sample metadata
data <- data %>% merge(sample_metadata[,c("id_acc","stage","stage_lineage")] %>% setnames("id_acc","sample"), by="sample") %>%
setkey(anno)
# Remove sex chromosomes because it might have inherently large variation due to gender
data <- merge(data,feature_metadata[,c("id","chr","anno")], by=c("id","anno")) %>% .[!chr %in% c("X","Y")] %>% .[,chr:=NULL]
# Filter by weight
data <- data[weight>=opts$min.weight]
# data <- data %>% split(.$anno) %>% map(~ .[weight>=opts$min.weight[unique(anno)]]) %>% rbindlist
# Filter features by coverage (by stage_lineage)
# for (sl in unique(data$stage_lineage)) {
#   data[stage_lineage==sl,Ntotal:=sample_metadata[stage_lineage==sl,.N]]
# }
# keep_cov_sites <- data %>% split(.$stage_lineage) %>% map(~ .[, cov:=.N/Ntotal, by=c("id","anno")] %>% .[cov >= opts$min.coverage] %>% .[,id_anno:=paste(id,anno,sep="_")] %>% .$id_anno)
# data <- data %>% .[,id_anno:=paste(id,anno,sep="_")] %>% .[id_anno%in%Reduce("intersect",keep_cov_sites)] %>% .[,"Ntotal":=NULL]
# Filter by variance
# keep_hv_sites <- data %>% split(.$anno) %>% map(~ .[,.(var = var(rate)), by="id"] %>% setorder(-var)  %>% head(n = nrow(.) * opts$fraction.sites) %>% .$id)
# data <- data %>% split(.$anno) %>% map2(.,names(.), function(x,y) x[id %in% keep_hv_sites[[y]]]) %>% rbindlist
# Filter features by minimum number of cells per group
# remove_n_sites <- data %>% split(.$anno) %>% map(~ .[,.(N=min(.N)), by=c("id","group")] %>% .[N<opts$min.n,id])
# data <- data %>% split(.$anno) %>% map2(.,names(.), function(x,y) x[!id %in% remove_n_sites[[y]]]) %>% rbindlist
data_list <- list()
for (ann in unique(data$anno)){
data_tmp <- data[anno == ann, ]
# Non gene-associated feature
if (all(grepl("ENSMUSG", unique(data_tmp$id)) == FALSE)) {
ov <- foverlaps(
# Feature metadata
feature_metadata[anno == ann, c("chr", "start", "end", "id")] %>% setkey(chr, start, end),
# Gene metadata
gene_metadata[, c("chr", "start", "end", "gene")] %>%
.[,c("start", "end") := list(start - opts$gene_window, end + opts$gene_window)] %>% setkey(chr, start, end),
nomatch = NA) %>% .[,c("gene", "id")]
ov <- ov[,.(gene=paste(gene,collapse="_")), by="id"]
# Merge with accessibility data
data_list[[ann]] <- merge(ov, data_tmp, by = "id") %>%
.[,c("id","gene","anno","sample","rate","weight","stage_lineage")]
}
# Gene-associated feature
else if (all(grepl("ENSMUSG", unique(data_tmp$id)) == TRUE)) {
data_list[[ann]] <- merge(data_tmp, gene_metadata[, c("id", "gene")], by="id") %>%
.[,c("id","gene","anno","sample","rate","weight","stage_lineage")]
}
}
data <- rbindlist(data_list)
# foo_id <- "E6.5_Distal_H3K27ac_28494"
# foo_anno <- "E6.5_Distal_H3K27ac"
# foo_gene <- "Nfatc1"
# tmp <- data[id==foo_id & anno==foo_anno & gene==foo_gene,c("id","gene","anno")] %>% unique
foo_gene <- "Mesp2"
tmp <- data[gene %in% foo_gene,c("id","gene","anno")] %>% unique
for (i in 1:nrow(tmp)) {
foo <- data[id==tmp[i,id] & anno==tmp[i,anno]]
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
# geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
labs(x="", y="Accessibility rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(sprintf("%s/%d_%s_%s_%s.pdf",io$outdir,i,tmp[i,anno],tmp[i,id],tmp[i,gene]))
# print(p)
# dev.off()
}
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
labs(x="", y="Accessibility rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_point(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
labs(x="", y="Accessibility rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
labs(x="", y="Accessibility rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
View(foo)
boxplot_theme <- function() {
p <- theme(
plot.title = element_text(size=30, hjust=0.5, margin=margin(0,0,20,0)),
axis.title.y = element_text(colour="black", size=20, vjust=1.5),
axis.title.x = element_text(colour="black", size=20, vjust=1.5, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.6)),
axis.text.y = element_text(colour="black",size=rel(1.6)),
axis.line = element_line(colour="black", size=rel(0.7)),
axis.ticks.x = element_line(colour="black", size=rel(0.8)),
axis.ticks.y = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="none",
legend.text=element_text(size=15),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
}
library(data.table)
library(purrr)
library(ggplot2)
io <- list()
opts <- list()
## Define I/O ##
io$sample.metadata <- "/Users/ricard/data/gastrulation/sample_metadata.txt"
io$gene.metadata <- "/Users/ricard/data/ensembl/mouse/v87/BioMart/mRNA/Mmusculus_genes_BioMart.87.txt"
io$data.dir <- "/Users/ricard/data/gastrulation/met/parsed"
io$features.dir <- "/Users/ricard/data/gastrulation/features/filt"
io$outdir <- "/Users/ricard/gastrulation/met/plot_example/out"
## Define options ##
# Define which annotations to look at
opts$annos <- c("prom_2000_2000","genebody","CGI","E3.5_Distal_H3K27ac","E6.5_Distal_H3K27ac")
# Define which stage and lineages to look at
opts$stage_lineage <- c(
"E5.5_EPI",
# "E6.5_early_EPI","E6.5_early_PS",
"E6.5_late_EPI","E6.5_late_PS",
"E6.75_EPI","E6.75_PS",
"E7.5_Ectoderm","E7.5_Mesoderm"
)
# window length for the overlap between genes and features
opts$gene_window <- 25000
# Filtering criteria
opts$min.weight <- 1
# opts$min.coverage <- 0.25
# opts$fraction.sites <- 0.5
# opts$min.n <- 15
# Define which cells to use
opts$cells <- fread(io$sample.metadata) %>% .[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
.[pass_metQC==T & stage_lineage%in%opts$stage_lineage,id_met]
# Sample metadata
sample_metadata <- fread(io$sample.metadata) %>% .[id_met%in%opts$cells] %>% .[,stage_lineage:=paste(stage,lineage,sep="_")]
# Gene metadata
gene_metadata <- fread(io$gene.metadata) %>% .[,chr:=as.factor(sub("chr","",chr))] %>%
setnames(c("ens_id","symbol"),c("id","gene"))
# Load methylation data
data <- lapply(opts$annos, function(n) fread(sprintf("zcat < %s/%s.tsv.gz",io$data.dir,n), showProgress=F)) %>% rbindlist
colnames(data) <- c("id_met","id","anno","rate","weight")
# Load genomic features
feature_metadata <- lapply(opts$annos, function(n) fread(sprintf("%s/%s.bed",io$features.dir,n), showProgress=F)) %>% rbindlist
colnames(feature_metadata) <- c("chr","start","end","strand","id","anno")
sample_metadata[,stage:=stringr::str_replace_all(stage, c("_early"="","_late"=""))]
sample_metadata[,stage_lineage:=stringr::str_replace_all(stage_lineage, c("early_"="","late_"=""))]
sample_metadata[,stage:=ifelse(stage%in%c("E6.5","E6.75"),"E6.5_E6.75",stage)] %>% .[,stage_lineage:=paste(stage,lineage,sep="_")]
# Merge methylation data and sample metadata
data <- data %>% merge(sample_metadata[,c("id_met","stage","stage_lineage")], by="id_met") %>% setkey(anno)
# Remove sex chromosomes because it might have inherently large variation due to gender
data <- merge(data,feature_metadata[,c("id","chr","anno")], by=c("id","anno"))
# Filter by weight
data <- data[weight>=opts$min.weight]
# data <- data %>% split(.$anno) %>% map(~ .[weight>=opts$min.weight[unique(anno)]]) %>% rbindlist
# Filter features by coverage (by stage_lineage)
# for (sl in unique(data$stage_lineage)) {
#   data[stage_lineage==sl,Ntotal:=sample_metadata[stage_lineage==sl,.N]]
# }
# keep_cov_sites <- data %>% split(.$stage_lineage) %>% map(~ .[, .(cov=.N/Ntotal), by=c("id","anno")] %>% .[cov >= opts$min.coverage] %>% .[,id_anno:=paste(id,anno,sep="_")] %>% .$id_anno %>% unique)
# data <- data %>% .[,id_anno:=paste(id,anno,sep="_")] %>% .[id_anno%in%Reduce("intersect",keep_cov_sites)] %>% .[,"Ntotal":=NULL]
# Filter by variance
# keep_hv_sites <- data %>% split(.$anno) %>% map(~ .[,.(var = var(rate)), by="id"] %>% setorder(-var)  %>% head(n = nrow(.) * opts$fraction.sites) %>% .$id)
# data <- data %>% split(.$anno) %>% map2(.,names(.), function(x,y) x[id %in% keep_hv_sites[[y]]]) %>% rbindlist
# Filter features by minimum number of cells per group
# remove_n_sites <- data %>% split(.$anno) %>% map(~ .[,.(N=min(.N)), by=c("id","group")] %>% .[N<opts$min.n,id])
# data <- data %>% split(.$anno) %>% map2(.,names(.), function(x,y) x[!id %in% remove_n_sites[[y]]]) %>% rbindlist
data_list <- list()
for (ann in unique(data$anno)){
data_tmp <- data[anno == ann, ]
# Non gene-associated feature
if (all(grepl("ENSMUSG", unique(data_tmp$id)) == FALSE)) {
ov <- foverlaps(
# Feature metadata
feature_metadata[anno == ann, c("chr", "start", "end", "id")] %>% setkey(chr, start, end),
# Gene metadata
gene_metadata[, c("chr", "start", "end", "gene")] %>%
.[,c("start", "end") := list(start - opts$gene_window, end + opts$gene_window)] %>% setkey(chr, start, end),
nomatch = NA) %>% .[,c("gene", "id")]
ov <- ov[,.(gene=paste(gene,collapse="_")), by="id"]
# Merge with methylation data
data_list[[ann]] <- merge(ov, data_tmp, by = "id") %>%
.[,c("id","gene","anno","id_met","rate","weight","stage_lineage")]
}
# Gene-associated feature
else if (all(grepl("ENSMUSG", unique(data_tmp$id)) == TRUE)) {
data_list[[ann]] <- merge(data_tmp, gene_metadata[, c("id", "gene")], by="id") %>%
.[,c("id","gene","anno","id_met","rate","weight","stage_lineage")]
}
}
data <- rbindlist(data_list)
# foo_id <- "E6.5_Distal_H3K27ac_28494"
# foo_anno <- "E6.5_Distal_H3K27ac"
# foo_gene <- "Nfatc1"
# tmp <- data[id==foo_id & anno==foo_anno & gene==foo_gene,c("id","gene","anno")] %>% unique
# foo_gene <- "Vmn2r4"
# tmp <- data[gene %in% foo_gene,c("id","gene","anno")] %>% unique
foo_id <- "E6.5_Distal_H3K27ac_12024"
# foo_id <- c("E6.5_Distal_H3K27ac_4121","E6.5_Distal_H3K27ac_4122")
tmp <- data[id %in% foo_id,c("id","gene","anno")] %>% unique
for (i in 1:nrow(tmp)) {
foo <- data[id==tmp[i,id] & anno==tmp[i,anno]]
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
# labs(x="", y="Methylation rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
labs(x="", y="Methylation rate", title="") +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
pdf(sprintf("%s/%s_%s_%s.pdf",io$outdir,tmp[i,anno],tmp[i,id],tmp[i,gene]), width=6, height=5)
print(p)
dev.off()
}
View(foo)
# foo_id <- "E6.5_Distal_H3K27ac_28494"
# foo_anno <- "E6.5_Distal_H3K27ac"
# foo_gene <- "Nfatc1"
# tmp <- data[id==foo_id & anno==foo_anno & gene==foo_gene,c("id","gene","anno")] %>% unique
# foo_gene <- "Vmn2r4"
# tmp <- data[gene %in% foo_gene,c("id","gene","anno")] %>% unique
foo_id <- "E6.5_Distal_H3K27ac_10549"
# foo_id <- c("E6.5_Distal_H3K27ac_4121","E6.5_Distal_H3K27ac_4122")
tmp <- data[id %in% foo_id,c("id","gene","anno")] %>% unique
for (i in 1:nrow(tmp)) {
foo <- data[id==tmp[i,id] & anno==tmp[i,anno]]
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
# labs(x="", y="Methylation rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
labs(x="", y="Methylation rate", title="") +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
pdf(sprintf("%s/%s_%s_%s.pdf",io$outdir,tmp[i,anno],tmp[i,id],tmp[i,gene]), width=6, height=5)
print(p)
dev.off()
}
# foo_id <- "E6.5_Distal_H3K27ac_28494"
# foo_anno <- "E6.5_Distal_H3K27ac"
# foo_gene <- "Nfatc1"
# tmp <- data[id==foo_id & anno==foo_anno & gene==foo_gene,c("id","gene","anno")] %>% unique
# foo_gene <- "Vmn2r4"
# tmp <- data[gene %in% foo_gene,c("id","gene","anno")] %>% unique
foo_id <- "E6.5_Distal_H3K27ac_28494"
# foo_id <- c("E6.5_Distal_H3K27ac_4121","E6.5_Distal_H3K27ac_4122")
tmp <- data[id %in% foo_id,c("id","gene","anno")] %>% unique
for (i in 1:nrow(tmp)) {
foo <- data[id==tmp[i,id] & anno==tmp[i,anno]]
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
# labs(x="", y="Methylation rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
labs(x="", y="Methylation rate", title="") +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
pdf(sprintf("%s/%s_%s_%s.pdf",io$outdir,tmp[i,anno],tmp[i,id],tmp[i,gene]), width=6, height=5)
print(p)
dev.off()
}
# foo_id <- "E6.5_Distal_H3K27ac_28494"
# foo_anno <- "E6.5_Distal_H3K27ac"
# foo_gene <- "Nfatc1"
# tmp <- data[id==foo_id & anno==foo_anno & gene==foo_gene,c("id","gene","anno")] %>% unique
# foo_gene <- "Vmn2r4"
# tmp <- data[gene %in% foo_gene,c("id","gene","anno")] %>% unique
foo_id <- "E6.5_Distal_H3K27ac_20092"
# foo_id <- c("E6.5_Distal_H3K27ac_4121","E6.5_Distal_H3K27ac_4122")
tmp <- data[id %in% foo_id,c("id","gene","anno")] %>% unique
for (i in 1:nrow(tmp)) {
foo <- data[id==tmp[i,id] & anno==tmp[i,anno]]
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
# labs(x="", y="Methylation rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
labs(x="", y="Methylation rate", title="") +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
pdf(sprintf("%s/%s_%s_%s.pdf",io$outdir,tmp[i,anno],tmp[i,id],tmp[i,gene]), width=6, height=5)
print(p)
dev.off()
}
# foo_id <- "E6.5_Distal_H3K27ac_28494"
# foo_anno <- "E6.5_Distal_H3K27ac"
# foo_gene <- "Nfatc1"
# tmp <- data[id==foo_id & anno==foo_anno & gene==foo_gene,c("id","gene","anno")] %>% unique
# foo_gene <- "Vmn2r4"
# tmp <- data[gene %in% foo_gene,c("id","gene","anno")] %>% unique
foo_id <- "E6.5_Distal_H3K27ac_14604"
# foo_id <- c("E6.5_Distal_H3K27ac_4121","E6.5_Distal_H3K27ac_4122")
tmp <- data[id %in% foo_id,c("id","gene","anno")] %>% unique
for (i in 1:nrow(tmp)) {
foo <- data[id==tmp[i,id] & anno==tmp[i,anno]]
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
# labs(x="", y="Methylation rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
labs(x="", y="Methylation rate", title="") +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
pdf(sprintf("%s/%s_%s_%s.pdf",io$outdir,tmp[i,anno],tmp[i,id],tmp[i,gene]), width=6, height=5)
print(p)
dev.off()
}
# foo_id <- "E6.5_Distal_H3K27ac_28494"
# foo_anno <- "E6.5_Distal_H3K27ac"
# foo_gene <- "Nfatc1"
# tmp <- data[id==foo_id & anno==foo_anno & gene==foo_gene,c("id","gene","anno")] %>% unique
# foo_gene <- "Vmn2r4"
# tmp <- data[gene %in% foo_gene,c("id","gene","anno")] %>% unique
foo_id <- "E6.5_Distal_H3K27ac_9262"
# foo_id <- c("E6.5_Distal_H3K27ac_4121","E6.5_Distal_H3K27ac_4122")
tmp <- data[id %in% foo_id,c("id","gene","anno")] %>% unique
for (i in 1:nrow(tmp)) {
foo <- data[id==tmp[i,id] & anno==tmp[i,anno]]
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
# labs(x="", y="Methylation rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
labs(x="", y="Methylation rate", title="") +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
pdf(sprintf("%s/%s_%s_%s.pdf",io$outdir,tmp[i,anno],tmp[i,id],tmp[i,gene]), width=6, height=5)
print(p)
dev.off()
}
# foo_id <- "E6.5_Distal_H3K27ac_28494"
# foo_anno <- "E6.5_Distal_H3K27ac"
# foo_gene <- "Nfatc1"
# tmp <- data[id==foo_id & anno==foo_anno & gene==foo_gene,c("id","gene","anno")] %>% unique
# foo_gene <- "Vmn2r4"
# tmp <- data[gene %in% foo_gene,c("id","gene","anno")] %>% unique
foo_id <- "E6.5_Distal_H3K27ac_12024"
# foo_id <- c("E6.5_Distal_H3K27ac_4121","E6.5_Distal_H3K27ac_4122")
tmp <- data[id %in% foo_id,c("id","gene","anno")] %>% unique
for (i in 1:nrow(tmp)) {
foo <- data[id==tmp[i,id] & anno==tmp[i,anno]]
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
# labs(x="", y="Methylation rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
labs(x="", y="Methylation rate", title="") +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
pdf(sprintf("%s/%s_%s_%s.pdf",io$outdir,tmp[i,anno],tmp[i,id],tmp[i,gene]), width=6, height=5)
print(p)
dev.off()
}
# foo_id <- "E6.5_Distal_H3K27ac_28494"
# foo_anno <- "E6.5_Distal_H3K27ac"
# foo_gene <- "Nfatc1"
# tmp <- data[id==foo_id & anno==foo_anno & gene==foo_gene,c("id","gene","anno")] %>% unique
# foo_gene <- "Vmn2r4"
# tmp <- data[gene %in% foo_gene,c("id","gene","anno")] %>% unique
foo_id <- "E6.5_Distal_H3K27ac_20339"
# foo_id <- c("E6.5_Distal_H3K27ac_4121","E6.5_Distal_H3K27ac_4122")
tmp <- data[id %in% foo_id,c("id","gene","anno")] %>% unique
for (i in 1:nrow(tmp)) {
foo <- data[id==tmp[i,id] & anno==tmp[i,anno]]
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
# labs(x="", y="Methylation rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
labs(x="", y="Methylation rate", title="") +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
pdf(sprintf("%s/%s_%s_%s.pdf",io$outdir,tmp[i,anno],tmp[i,id],tmp[i,gene]), width=6, height=5)
print(p)
dev.off()
}
# foo_id <- "E6.5_Distal_H3K27ac_28494"
# foo_anno <- "E6.5_Distal_H3K27ac"
# foo_gene <- "Nfatc1"
# tmp <- data[id==foo_id & anno==foo_anno & gene==foo_gene,c("id","gene","anno")] %>% unique
# foo_gene <- "Vmn2r4"
# tmp <- data[gene %in% foo_gene,c("id","gene","anno")] %>% unique
foo_id <- "E6.5_Distal_H3K27ac_14604"
# foo_id <- c("E6.5_Distal_H3K27ac_4121","E6.5_Distal_H3K27ac_4122")
tmp <- data[id %in% foo_id,c("id","gene","anno")] %>% unique
for (i in 1:nrow(tmp)) {
foo <- data[id==tmp[i,id] & anno==tmp[i,anno]]
p <- ggplot(foo, aes(x=stage_lineage, y=rate)) +
geom_jitter(aes(color=stage_lineage), size=1.0) +
geom_violin(aes(fill=stage_lineage), alpha=0.5) +
geom_boxplot(aes(fill=stage_lineage), alpha=0.5, outlier.shape=NA, width=0.15) +
# scale_x_discrete(labels=c("PE","EPI")) +
# scale_color_discrete(labels=c("PE","EPI")) +
# scale_fill_discrete(labels=c("PE","EPI")) +
# labs(x="", y="Methylation rate", title= sprintf("id: %s\ngene: %s\nanno: %s",tmp[i,id],tmp[i,gene],tmp[i,anno])) +
labs(x="", y="Methylation rate", title="") +
# theme_bw()
boxplot_theme() +
theme(
plot.title = element_text(size=rel(1.3), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.2), angle=90, hjust=1, vjust=0.5)
)
print(p)
pdf(sprintf("%s/%s_%s_%s.pdf",io$outdir,tmp[i,anno],tmp[i,id],tmp[i,gene]), width=6, height=5)
print(p)
dev.off()
}
