# join everything filling with missing values
all_matrix_list <- c(rna=list(rna_matrix),met_matrix_list,acc_matrix_list)
# Create MOFAobject
MOFAobject <- createMOFAobject(all_matrix_list)
# Data processing options
DataOptions <- getDefaultDataOptions()
# Model options
ModelOptions <- getDefaultModelOptions(MOFAobject)
ModelOptions$numFactors <- 10
# Training options
TrainOptions <- getDefaultTrainOptions()
TrainOptions$maxiter <- 5000
TrainOptions$tolerance <- 0.01
TrainOptions$DropFactorThreshold <- 0.01
# Prepare MOFAobject for training
MOFAmodel <- prepareMOFA(MOFAobject,
DataOptions = DataOptions,
ModelOptions = ModelOptions,
TrainOptions = TrainOptions
)
# Train the model
outfile <- paste0(io$outdir,"/E7.5/test.hdf5")
model <- runMOFA(MOFAmodel, outfile)
sample_metadata_filt <- sample_metadata %>% setkey(sample) %>% .[MOFAtools::sampleNames(model)]
opts$anno_names <- c(
"acc_H3K27ac_distal_E7.5_Mes"="Acc Mes Distal H3K27ac",
"acc_H3K27ac_distal_E7.5_Ect"="Acc Ect Distal H3K27ac",
"acc_H3K27ac_distal_E7.5_End"="Acc End Distal H3K27ac",
"acc_H3K27ac_promoter_E7.5_Mes"="Acc Mes Proximal H3K27ac",
"acc_H3K27ac_promoter_E7.5_Ect"="Acc Ect Proximal H3K27ac",
"acc_H3K27ac_promoter_E7.5_End"="Acc End Proximal H3K27ac",
"acc_H3K4me3_E7.5_Mes"="Acc Mes H3K4me3",
"acc_H3K4me3_E7.5_End"="Acc End H3K4me3",
"acc_H3K4me3_E7.5_Ect"="Acc Ect H3K4me3",
"acc_H3K27me3_E7.5_Mes_low"="Acc Mes H3K27me3",
"acc_H3K27me3_E7.5_End_low"="Acc End H3K27me3",
"acc_H3K27me3_E7.5_Ect_low"="Acc Ect H3K27me3",
"acc_genebody"="Acc Gene bodies",
"acc_prom_2000_2000_cgi"="Acc CGI Promoters",
"acc_prom_2000_2000_noncgi"="Acc non-CGI Promoters",
"acc_LINE"="Acc LINE",
"acc_CGI"="Acc CpG Islands",
"met_H3K27ac_distal_E7.5_Mes_500"="Met Mes Distal H3K27ac",
"met_H3K27ac_distal_E7.5_Ect_500"="Met Ect Distal H3K27ac",
"met_H3K27ac_distal_E7.5_End_500"="Met End Distal H3K27ac",
"met_H3K27ac_promoter_E7.5_Mes_500"="Met Mes Proximal H3K27ac",
"met_H3K27ac_promoter_E7.5_Ect_500"="Met Ect Proximal H3K27ac",
"met_H3K27ac_promoter_E7.5_End_500"="Met End Proximal H3K27ac",
"met_H3K4me3_E7.5_Mes"="Met Mes H3K4me3",
"met_H3K4me3_E7.5_End"="Met End H3K4me3",
"met_H3K4me3_E7.5_Ect"="Met Ect H3K4me3",
"met_H3K27me3_E7.5_Mes_low"="Met Mes H3K27me3",
"met_H3K27me3_E7.5_End_low"="Met End H3K27me3",
"met_H3K27me3_E7.5_Ect_low"="Met Ect H3K27me3",
"met_genebody"="Met Gene bodies",
"met_prom_2000_2000_cgi"="Met CGI Promoters",
"met_prom_2000_2000_noncgi"="Met non-CGI Promoters",
"met_LINE"="Met LINE",
"met_CGI"="Met CpG Islands",
"rna" = "RNA expression"
)
viewNames(model) <- stringr::str_replace_all(viewNames(model), opts$anno_names)
)
r2 <- calculateVarianceExplained(model)$R2PerFactor
factors <- r2[,"RNA expression"]>0.01
model <- subsetFactors(model, which(factors))
factorNames(model) <- paste0("LF",1:getDimensions(model)[["K"]])
fvar_mk <- calculateVarianceExplained(model)$R2PerFactor
fvar_mk[fvar_mk<TrainOptions$DropFactorThreshold] <- 0
# convert matrix to data frame for ggplot2
fvar_mk_df <- reshape2::melt(fvar_mk, varnames=c("factor","view"))
fvar_mk_df$factor <- factor(fvar_mk_df$factor)
# Grid plot with the variance explained per factor and view
p <- ggplot(fvar_mk_df, aes_string(x="view",y="factor")) +
geom_tile(aes_string(fill="value"), color="black") +
guides(fill=guide_colorbar("R2")) +
scale_fill_gradientn(colors=c("gray97","darkblue"), guide="colorbar") +
ylab("Latent factor") +
theme(
# plot.margin = margin(5,5,5,5),
plot.title = element_text(size=17, hjust=0.5),
axis.title.x = element_blank(),
axis.text.x = element_text(size=11, angle=60, hjust=1, vjust=1, color="black"),
axis.text.y = element_text(size=12, color="black"),
axis.title.y = element_text(size=15),
axis.line = element_blank(),
axis.ticks =  element_blank(),
panel.background = element_blank()
)
print(p)
plotFactorScatter(model,
factors=c("LF1","LF2"),
color_by=sample_metadata_filt$stage_lineage
)
plotFactorScatter(model,
factors=c("LF2","LF3"),
color_by=sample_metadata_filt$stage_lineage
)
plotFactorScatter(model,
factors=c("LF4","LF3"),
color_by=sample_metadata_filt$stage_lineage
)
plotFactorScatter(model,
factors=c("LF4","LF2"),
color_by=sample_metadata_filt$stage_lineage
)
opts$colors <- list(stage=c(
E4.5_EPI="gray80",
E5.5="gray60",
E6.5_EPI="grey30", E6.5_PS="grey30",
E7.5_Ectoderm="steelblue", E7.5_Endoderm="#43CD80", E7.5_Mesoderm="violetred")
)
p <- plotFactorScatter(model,
factors=c("LF4","LF2"),
color_by=sample_metadata_filt$stage_lineage
)
p + scale_color_manual(values=opts$colors)
opts$colors
opts$colors <- c(
E4.5_EPI="gray80",
E5.5="gray60",
E6.5_EPI="grey30", E6.5_PS="grey30",
E7.5_Ectoderm="steelblue", E7.5_Endoderm="#43CD80", E7.5_Mesoderm="violetred"
)
p + scale_color_manual(values=opts$colors)
opts$colors <- c(
E4.5_EPI="gray80",
E5.5="gray60",
E6.5_EPI="grey40", E6.5_PS="grey40",
E7.5_Ectoderm="steelblue", E7.5_Endoderm="#43CD80", E7.5_Mesoderm="violetred"
)
p <- plotFactorScatter(model,
factors=c("LF4","LF2"),
color_by=sample_metadata_filt$stage_lineage
)
p + scale_color_manual(values=opts$colors)
opts$colors <- c(
E4.5_EPI="gray80",
E5.5="gray60",
E6.5_EPI="grey40", E6.5_PS="sandybrown",
E7.5_Ectoderm="steelblue", E7.5_Endoderm="#43CD80", E7.5_Mesoderm="violetred"
)
p <- plotFactorScatter(model,
factors=c("LF4","LF2"),
color_by=sample_metadata_filt$stage_lineage
)
p + scale_color_manual(values=opts$colors)
opts$colors <- c(
E4.5_EPI="gray80",
E5.5_EPI="gray60",
E6.5_EPI="grey40", E6.5_PS="sandybrown",
E7.5_Ectoderm="steelblue", E7.5_Endoderm="#43CD80", E7.5_Mesoderm="violetred"
)
p <- plotFactorScatter(model,
factors=c("LF4","LF2"),
color_by=sample_metadata_filt$stage_lineage
)
p + scale_color_manual(values=opts$colors)
io$outdir
io$outdir <- "/Users/ricard/test/gastrulation/traceback/out"
pdf(paste0(io$outdir,"/pdf/trajectory.pdf"), useDingbats = F, onefile = F, width=6, height=4)
pdf(paste0(io$outdir,"/pdf/trajectory.pdf"), useDingbats = F, onefile = F, width=6, height=4)
print(p)
dev.off()
p <- plotFactorScatter(model,
factors=c("LF1","LF3"),
color_by=sample_metadata_filt$stage_lineage
) + scale_color_manual(values=opts$colors)
print(p)
p <- plotFactorScatter(model,
factors=c("LF2","LF3"),
color_by=sample_metadata_filt$stage_lineage
) + scale_color_manual(values=opts$colors)
print(p)
plotFactorBeeswarm(model,
factors="LF3",
color_by=sample_metadata_filt$stage_lineage
)
p <- plotFactorScatter(model,
factors=c("LF1","LF3"),
color_by=sample_metadata_filt$stage_lineage
) + scale_color_manual(values=opts$colors)
print(p)
p <- plotFactorScatter(model,
factors=c("LF3","LF4"),
color_by=sample_metadata_filt$stage_lineage
) + scale_color_manual(values=opts$colors)
print(p)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_i, view="Met Gene Bodies", factor="LF4", features=25, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
model_i <- impute(model)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_i, view="Met Gene Bodies", factor="LF4", features=25, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
viewNames(model_i)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_i, view="Met Gene bodies", factor="LF4", features=25, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
anno_df <- data.frame(
row.names = sample_metadata_filt$sample,
stage_lineage = sample_metadata_filt$stage_lineage
)
model_i <- impute(model)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_i, view="Met Gene bodies", factor="LF4", features=25, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_i, view="Met Gene bodies", factor="LF4", features=25, imputed=T,
annotation_row=anno_df,
cluster_rows=T,
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_i, view="Met Gene bodies", factor="LF3", features=25, imputed=T,
annotation_row=anno_df,
cluster_rows=T,
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_i, view="Met Gene bodies", factor="LF3", features=25, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
model_j <- subsetSamples(model_i, as.character(sample_metadata_filt[stage_lineage%in%c("E7.5_Mesoderm","E7.5_Endoderm","E7.5_Ectoderm",sample]))
model_j <- subsetSamples(model_i, as.character(sample_metadata_filt[stage_lineage%in%c("E7.5_Mesoderm","E7.5_Endoderm","E7.5_Ectoderm"),sample]))
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met Gene bodies", factor="LF3", features=25, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met Gene bodies", factor="LF3", features=10, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
model_j <- subsetSamples(model_i, as.character(sample_metadata_filt[stage_lineage%in%c("E6.5_EPI","E5.5_EPI","E7.5_Ectoderm"),sample]))
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met Gene bodies", factor="LF3", features=10, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
p <- plotFactorScatter(model,
factors=c("LF3","LF4"),
color_by=sample_metadata_filt$stage_lineage
) + scale_color_manual(values=opts$colors)
print(p)
p <- plotFactorScatter(model,
factors=c("LF3","LF5"),
color_by=sample_metadata_filt$stage_lineage
) + scale_color_manual(values=opts$colors)
print(p)
p <- plotFactorScatter(model,
factors=c("LF1","LF3"),
color_by=sample_metadata_filt$stage_lineage
) + scale_color_manual(values=opts$colors)
print(p)
Z <- getFactors(model, factors=c("LF2","LF3","LF4"))
dim(Z)
install.packages("plot3d")
install.packages("plot3D")
install.packages("plot3D")
library(plot3d)
library(plot3D)
?plot3D
plot3d(Z)
Z[,1]
plot3d(Z[,1],Z[,2],Z[,3])
scatterplot3d(Z[,1],Z[,2],Z[,3])
library(scatterplot3d)
scatterplot3d(Z[,1],Z[,2],Z[,3])
scatterplot3d(Z[,2],Z[,1],Z[,3])
?scatterplot3d
rownames(Z)
opts$colors
sample_metadata_filt[,c("sample","stage_lineage")] %>% .[,color:=opts$colors[stage_lineage]]
sample_metadata_filt
asd <- sample_metadata_filt[,c("sample","stage_lineage")] %>% copy %>% .[,color:=opts$colors[stage_lineage]]
as
asd
asd
scatterplot3d(Z[,2],Z[,1],Z[,3], color=asd$color)
library(rgl)
io$outdir
outfile
library(MOFAtools)
library(data.table)
library(purrr)
library(ggplot2)
library(scater)
matrix.please <- function(x) {
m<-as.matrix(x[,-1])
rownames(m)<-x[[1]]
m
}
## Define I/O ##
io <- list()
io$sample.metadata <- "/Users/ricard/data/gastrulation/sample_metadata_scNMT.txt"
io$met.dir <- "/Users/ricard/data/gastrulation/met/parsed"
io$acc.dir <- "/Users/ricard/data/gastrulation/acc/parsed"
io$rna.file <- "/Users/ricard/data/gastrulation/rna/parsed/sceset_scNMT.rds"
io$outdir <- "/Users/ricard/test/gastrulation/traceback/out"
io$annos_dir <- "/Users/ricard/data/gastrulation/features/filt"
io$gene_metadata <- "/Users/ricard/data/ensembl/mouse/v87/BioMart/mRNA/Mmusculus_genes_BioMart.87.txt"
## Define options ##
opts <- list()
# Define which stage and lineages to look at
opts$stage_lineage <- c(
"E4.5_EPI",
"E5.5_EPI",
"E6.5_EPI","E6.5_PS",
"E7.5_Ectoderm","E7.5_Mesoderm","E7.5_Endoderm"
)
opts$met.annos <- c(
"genebody",
"prom_2000_2000_noncgi",
"H3K27ac_distal_E7.5_Mes_500",
"H3K27ac_distal_E7.5_Ect_500",
"H3K27ac_distal_E7.5_End_500",
# "H3K27ac_promoter_E7.5_Mes_500",
# "H3K27ac_promoter_E7.5_Ect_500",
# "H3K27ac_promoter_E7.5_End_500",
"H3K4me3_E7.5_Mes",
"H3K4me3_E7.5_End",
"H3K4me3_E7.5_Ect"
# "H3K27me3_E7.5_Mes_low",
# "H3K27me3_E7.5_Ect_low",
# "H3K27me3_E7.5_End_low"
)
opts$acc.annos <- c(
"genebody",
"prom_2000_2000_noncgi",
"H3K27ac_distal_E7.5_Mes_500",
"H3K27ac_distal_E7.5_Ect_500",
"H3K27ac_distal_E7.5_End_500",
# "H3K27ac_promoter_E7.5_Mes_500",
# "H3K27ac_promoter_E7.5_Ect_500",
# "H3K27ac_promoter_E7.5_End_500",
"H3K4me3_E7.5_Mes",
"H3K4me3_E7.5_End",
"H3K4me3_E7.5_Ect"
# "H3K27me3_E7.5_Mes_low",
# "H3K27me3_E7.5_Ect_low",
# "H3K27me3_E7.5_End_low"
)
opts$overlapGenes <- FALSE
# Define which cells to use
tmp <- fread(io$sample.metadata) %>% .[,stage_lineage:=paste(stage,lineage,sep="_")] %>% .[KO_3b=="not"]
opts$met_cells <- tmp %>% .[pass_metQC==T & outlier==F & stage_lineage%in%opts$stage_lineage,id_met]
opts$acc_cells <- tmp %>% .[pass_accQC==T & outlier==F & stage_lineage%in%opts$stage_lineage,id_acc]
opts$rna_cells <- tmp %>% .[pass_rnaQC==T & outlier==F & stage_lineage%in%opts$stage_lineage,id_rna]
sample_metadata <- fread(io$sample.metadata,stringsAsFactors=T) %>%
.[,c("sample","id_acc","id_met","id_rna","stage","lineage")] %>%
.[,stage_lineage:=as.factor(paste(stage,lineage,sep="_"))] %>%
.[id_met%in%opts$met_cells | id_acc%in%opts$acc_cells] %>%
droplevels()
model <- loadModel(paste0(io$outdir,"/test.hdf5"))
sample_metadata_filt <- sample_metadata %>% setkey(sample) %>% .[MOFAtools::sampleNames(model)]
opts$anno_names <- c(
"acc_H3K27ac_distal_E7.5_Mes"="Acc Mes Distal H3K27ac",
"acc_H3K27ac_distal_E7.5_Ect"="Acc Ect Distal H3K27ac",
"acc_H3K27ac_distal_E7.5_End"="Acc End Distal H3K27ac",
"acc_H3K27ac_promoter_E7.5_Mes"="Acc Mes Proximal H3K27ac",
"acc_H3K27ac_promoter_E7.5_Ect"="Acc Ect Proximal H3K27ac",
"acc_H3K27ac_promoter_E7.5_End"="Acc End Proximal H3K27ac",
"acc_H3K4me3_E7.5_Mes"="Acc Mes H3K4me3",
"acc_H3K4me3_E7.5_End"="Acc End H3K4me3",
"acc_H3K4me3_E7.5_Ect"="Acc Ect H3K4me3",
"acc_H3K27me3_E7.5_Mes_low"="Acc Mes H3K27me3",
"acc_H3K27me3_E7.5_End_low"="Acc End H3K27me3",
"acc_H3K27me3_E7.5_Ect_low"="Acc Ect H3K27me3",
"acc_genebody"="Acc Gene bodies",
"acc_prom_2000_2000_cgi"="Acc CGI Promoters",
"acc_prom_2000_2000_noncgi"="Acc non-CGI Promoters",
"acc_LINE"="Acc LINE",
"acc_CGI"="Acc CpG Islands",
"met_H3K27ac_distal_E7.5_Mes_500"="Met Mes Distal H3K27ac",
"met_H3K27ac_distal_E7.5_Ect_500"="Met Ect Distal H3K27ac",
"met_H3K27ac_distal_E7.5_End_500"="Met End Distal H3K27ac",
"met_H3K27ac_promoter_E7.5_Mes_500"="Met Mes Proximal H3K27ac",
"met_H3K27ac_promoter_E7.5_Ect_500"="Met Ect Proximal H3K27ac",
"met_H3K27ac_promoter_E7.5_End_500"="Met End Proximal H3K27ac",
"met_H3K4me3_E7.5_Mes"="Met Mes H3K4me3",
"met_H3K4me3_E7.5_End"="Met End H3K4me3",
"met_H3K4me3_E7.5_Ect"="Met Ect H3K4me3",
"met_H3K27me3_E7.5_Mes_low"="Met Mes H3K27me3",
"met_H3K27me3_E7.5_End_low"="Met End H3K27me3",
"met_H3K27me3_E7.5_Ect_low"="Met Ect H3K27me3",
"met_genebody"="Met Gene bodies",
"met_prom_2000_2000_cgi"="Met CGI Promoters",
"met_prom_2000_2000_noncgi"="Met non-CGI Promoters",
"met_LINE"="Met LINE",
"met_CGI"="Met CpG Islands",
"rna" = "RNA expression"
)
viewNames(model) <- stringr::str_replace_all(viewNames(model), opts$anno_names)
r2 <- calculateVarianceExplained(model)$R2PerFactor
factors <- r2[,"RNA expression"]>0.01
model <- subsetFactors(model, which(factors))
factorNames(model) <- paste0("LF",1:getDimensions(model)[["K"]])
fvar_mk <- calculateVarianceExplained(model)$R2PerFactor
fvar_mk[fvar_mk<TrainOptions$DropFactorThreshold] <- 0
fvar_mk <- calculateVarianceExplained(model)$R2PerFactor
fvar_mk[fvar_mk<0.1] <- 0
# convert matrix to data frame for ggplot2
fvar_mk_df <- reshape2::melt(fvar_mk, varnames=c("factor","view"))
fvar_mk_df$factor <- factor(fvar_mk_df$factor)
# Grid plot with the variance explained per factor and view
p <- ggplot(fvar_mk_df, aes_string(x="view",y="factor")) +
geom_tile(aes_string(fill="value"), color="black") +
guides(fill=guide_colorbar("R2")) +
scale_fill_gradientn(colors=c("gray97","darkblue"), guide="colorbar") +
ylab("Latent factor") +
theme(
# plot.margin = margin(5,5,5,5),
plot.title = element_text(size=17, hjust=0.5),
axis.title.x = element_blank(),
axis.text.x = element_text(size=11, angle=60, hjust=1, vjust=1, color="black"),
axis.text.y = element_text(size=12, color="black"),
axis.title.y = element_text(size=15),
axis.line = element_blank(),
axis.ticks =  element_blank(),
panel.background = element_blank()
)
print(p)
fvar_mk <- calculateVarianceExplained(model)$R2PerFactor
fvar_mk[fvar_mk<0.01] <- 0
# convert matrix to data frame for ggplot2
fvar_mk_df <- reshape2::melt(fvar_mk, varnames=c("factor","view"))
fvar_mk_df$factor <- factor(fvar_mk_df$factor)
# Grid plot with the variance explained per factor and view
p <- ggplot(fvar_mk_df, aes_string(x="view",y="factor")) +
geom_tile(aes_string(fill="value"), color="black") +
guides(fill=guide_colorbar("R2")) +
scale_fill_gradientn(colors=c("gray97","darkblue"), guide="colorbar") +
ylab("Latent factor") +
theme(
# plot.margin = margin(5,5,5,5),
plot.title = element_text(size=17, hjust=0.5),
axis.title.x = element_blank(),
axis.text.x = element_text(size=11, angle=60, hjust=1, vjust=1, color="black"),
axis.text.y = element_text(size=12, color="black"),
axis.title.y = element_text(size=15),
axis.line = element_blank(),
axis.ticks =  element_blank(),
panel.background = element_blank()
)
print(p)
anno_df <- data.frame(
row.names = sample_metadata_filt$sample,
stage_lineage = sample_metadata_filt$stage_lineage
)
model_i <- impute(model)
model_j <- subsetSamples(model_i, as.character(sample_metadata_filt[stage_lineage%in%c("E6.5_EPI","E5.5_EPI","E7.5_Ectoderm"),sample]))
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met Gene bodies", factor="LF3", features=10, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met Gene bodies", factor="LF3", features=25, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
viewNames(model_k)
viewNames(model_j)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met Ect Distal H3K27ac", factor="LF3", features=25, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met Ect Distal H3K27ac", factor="LF3", features=10, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met Ect Distal H3K27ac", factor="LF3", features=10, imputed=F,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met End H3K4me3", factor="LF3", features=10, imputed=F,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met End H3K4me3", factor="LF3", features=10, imputed=T,
annotation_row=anno_df,
cluster_rows=F,
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met End H3K4me3", factor="LF3", features=10, imputed=T,
annotation_row=anno_df,
cluster_rows=F, cluster_cols=F
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met End H3K4me3", factor="LF3", features=10, imputed=T,
annotation_row=anno_df,
cluster_rows=F, cluster_cols=F,
show_rownames=F,show_colnames=F)
# pdf(paste0(io$outdir,"/pdf/topweights_rna_f1.pdf"), useDingbats = F, onefile = F, width=6, height=4)
plotDataHeatmap(model_j, view="Met Ect H3K4me3", factor="LF3", features=10, imputed=T,
annotation_row=anno_df,
cluster_rows=F, cluster_cols=F,
show_rownames=F,show_colnames=F)
