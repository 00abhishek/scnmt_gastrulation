# Define stage and lineages
opts$stage_lineage <- c(
"E4.5_EPI","E4.5_PE"
# "E5.5_EPI","E5.5_PE"
# "E6.5_EPI","E6.5_PS","E6.5_VE",
# "E6.75_EPI","E6.75_PS","E6.75_VE"
# "E7.5_Ectoderm","E7.5_Mesoderm","E7.5_Endoderm"
)
# Define window options
opts$up <- 3000
opts$window <- 250
opts$slide <- 50 # this should be >=100 when plotting single-cells, can be smaller when plotting averages
opts$down <- 3000
# All promoters
tss <- fread(io$tss, stringsAsFactors=TRUE)[,c(1,2,3,6,4)] %>%
setnames(c("chr","start","end","strand","ens_id")) %>%
.[strand=="+"] %>%
.[,chr:=as.factor(sub("chr","",chr))] %>%
.[,TSS:=start] %>%
.[,c("start","end"):=.(start-opts$up,end+opts$down)] %>%
setkey(chr,start,end)
sample_metadata <- fread(io$in.sample_metadata, stringsAsFactors=TRUE) %>%
.[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
.[pass_metQC==T & pass_accQC==T & stage_lineage%in%opts$stage_lineage & KO_3b=="not"] %>%
.[,c("sample","id_met","id_acc","stage","lineage")]
sample_metadata[stage=="E6.75",stage:="E6.5"] %>% .[,stage_lineage:=as.factor(paste(stage,lineage,sep="_"))]
opts$met.cells <- sample_metadata$id_met
opts$acc.cells <- sample_metadata$id_acc
opts$ncells <- 15
opts$filt.cells <- sample_metadata[,head(unique(sample),n=opts$ncells),by="stage_lineage"] %>% .$V1
sample_metadata <- sample_metadata[sample %in% opts$filt.cells]
opts$met.cells <- sample_metadata$id_met
opts$acc.cells <- sample_metadata$id_acc
acc_dt <- opts$acc.cells %>% map(function(cell) {
fread(sprintf("zcat < %s/%s.tsv.gz",io$acc.indir,cell), sep="\t", showProgress=FALSE, stringsAsFactors=TRUE) %>%
.[,id_acc:=factor(cell)] %>% .[,c("start","end"):=list(pos,pos)] %>%
setkey("chr","start","end") %>%
foverlaps(tss, nomatch=0) %>%
.[,dist:=ifelse(strand %in% c("+","*"),pos-TSS,TSS-pos)] %>%
.[,c("id_acc","ens_id","dist","rate")]
})# %>% rbindlist()
gc()
# tmp <- list()
# for (cell in opts$acc.cells) {
#   print(cell)
#   tmp[[cell]] <- fread(sprintf("zcat < %s/%s.tsv.gz",io$acc.indir,cell), sep="\t", showProgress=FALSE, stringsAsFactors=TRUE) %>%
#     .[,id_acc:=factor(cell)] %>% .[,c("start","end"):=list(pos,pos)] %>%
#     setkey("chr","start","end") %>%
#     foverlaps(tss, nomatch=0) %>%
#     .[,dist:=ifelse(strand %in% c("+","*"),pos-TSS,TSS-pos)] %>%
#     .[,c("id_acc","ens_id","dist","rate")]
#   gc()
# }
# acc_dt <- rbindlist(tmp)
tmp
# acc_dt <- opts$acc.cells %>% map(function(cell) {
#   fread(sprintf("zcat < %s/%s.tsv.gz",io$acc.indir,cell), sep="\t", showProgress=FALSE, stringsAsFactors=TRUE) %>%
#     .[,id_acc:=factor(cell)] %>% .[,c("start","end"):=list(pos,pos)] %>%
#     setkey("chr","start","end") %>%
#     foverlaps(tss, nomatch=0) %>%
#     .[,dist:=ifelse(strand %in% c("+","*"),pos-TSS,TSS-pos)] %>%
#     .[,c("id_acc","ens_id","dist","rate")]
# })# %>% rbindlist()
# gc(reset=TRUE)
tmp <- list()
for (cell in opts$acc.cells) {
print(cell)
tmp[[cell]] <- fread(sprintf("zcat < %s/%s.tsv.gz",io$acc.indir,cell), sep="\t", showProgress=FALSE, stringsAsFactors=TRUE) %>%
.[,id_acc:=factor(cell)] %>% .[,c("start","end"):=list(pos,pos)] %>%
setkey("chr","start","end") %>%
foverlaps(tss, nomatch=0) %>%
.[,dist:=ifelse(strand %in% c("+","*"),pos-TSS,TSS-pos)] %>%
.[,c("id_acc","ens_id","dist","rate")]
gc(reset=TRUE)
}
acc_dt <- rbindlist(tmp)
tmp <- list()
for (cell in opts$acc.cells) {
print(cell)
tmp[[cell]] <- fread(sprintf("zcat < %s/%s.tsv.gz",io$acc.indir,cell), sep="\t", showProgress=FALSE, stringsAsFactors=TRUE) %>%
.[,id_acc:=factor(cell)] %>% .[,c("start","end"):=list(pos,pos)] %>%
setkey("chr","start","end") %>%
foverlaps(tss, nomatch=0) %>%
.[,dist:=ifelse(strand %in% c("+","*"),pos-TSS,TSS-pos)] %>%
.[,c("id_acc","ens_id","dist","rate")]
# gc(reset=TRUE)
}
suppressPackageStartupMessages(library(scater))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(purrr))
suppressPackageStartupMessages(library(ggplot2))
# Function to load multipke methylation files and overlap them with a given genomic annotation
#   indir:
#   cells:
#   annotation: a data.table or data.frame with columns (chr,start,end,strand,id)
loadMultipleMetData <- function(indir, cells, annotation=NULL) {
data <- cells %>% map(function(cell) {
fread(sprintf("zcat < %s/%s.tsv.gz",indir,cell), sep="\t", showProgress=F, stringsAsFactors=TRUE) %>%
.[,id_met:=factor(cell, levels=levels(cells))] %>% .[,c("start","end"):=list(pos,pos)] %>%
setkey("chr","start","end") %>%
foverlaps(annotation, nomatch=0) %>%
.[,dist:=ifelse(strand %in% c("+","*"),pos-TSS,TSS-pos)] %>%
.[,c("id_met","ens_id","dist","rate")]
}) %>% rbindlist
return(data)
}
theme_pub <- function() {
theme(
plot.title = element_blank(),
axis.text.x = element_text(size=16,colour="black"),
axis.text.y = element_text(size=16, colour="black"),
axis.title.x = element_text(size=19),
axis.title.y = element_text(size=19),
axis.line = element_line(size=rel(1.0)),
axis.ticks.x = element_line(size=rel(1.1), color="black"),
axis.ticks.y = element_line(size=rel(1.1), color="black"),
legend.key = element_blank(),
legend.position = "top",
# legend.position = c(0.5,1.0),
legend.direction = "horizontal",
legend.key.width = unit(2.0,"line"),
legend.key.height = unit(2.0,"line"),
# legend.margin = margin(t=10, r=0, b=0, l=0, unit="pt"),
legend.title = element_blank(),
legend.text = element_text(size=16),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()
)
}
mean_sd <- function(x) { return(data.frame(y=mean(x), ymin=mean(x)-sd(x)/2, ymax=mean(x)+sd(x)/2)) }
## Define I/O ##
io <- list()
if (grepl("ricard",Sys.info()['nodename'])) {
io$basedir <- "/Users/ricard/data/gastrulation"
io$outdir <- "/Users/ricard/data/gastrulation/metrna/local_cor/out"
io$tss <- "/Users/ricard/data/mm10_regulation/promoters/TSS.bed"
} else {
stop()
}
io$in.sample_metadata <- paste0(io$basedir,"/sample_metadata_scNMT.txt")
io$met.indir <- paste(io$basedir,"met/raw",sep="/")
io$acc.indir <- paste(io$basedir,"acc/raw",sep="/")
## Define options ##
opts <- list()
# Define stage and lineages
opts$stage_lineage <- c(
"E4.5_EPI","E4.5_PE",
"E5.5_EPI","E5.5_PE",
"E6.5_EPI","E6.5_PS","E6.5_VE",
"E6.75_EPI","E6.75_PS","E6.75_VE",
"E7.5_Ectoderm","E7.5_Mesoderm","E7.5_Endoderm"
)
# Define window options
opts$up <- 3000
opts$window <- 250
opts$slide <- 50 # this should be >=100 when plotting single-cells, can be smaller when plotting averages
opts$down <- 3000
# All promoters
tss <- fread(io$tss, stringsAsFactors=TRUE)[,c(1,2,3,6,4)] %>%
setnames(c("chr","start","end","strand","ens_id")) %>%
.[strand=="+"] %>%
.[,chr:=as.factor(sub("chr","",chr))] %>%
.[,TSS:=start] %>%
.[,c("start","end"):=.(start-opts$up,end+opts$down)] %>%
setkey(chr,start,end)
sample_metadata <- fread(io$in.sample_metadata, stringsAsFactors=TRUE) %>%
.[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
.[pass_metQC==T & pass_accQC==T & stage_lineage%in%opts$stage_lineage & KO_3b=="not"] %>%
.[,c("sample","id_met","id_acc","stage","lineage")]
sample_metadata[stage=="E6.75",stage:="E6.5"] %>% .[,stage_lineage:=as.factor(paste(stage,lineage,sep="_"))]
opts$met.cells <- sample_metadata$id_met
opts$acc.cells <- sample_metadata$id_acc
opts$ncells <- 15
opts$filt.cells <- sample_metadata[,head(unique(sample),n=opts$ncells),by="stage_lineage"] %>% .$V1
sample_metadata <- sample_metadata[sample %in% opts$filt.cells]
opts$met.cells <- sample_metadata$id_met
opts$acc.cells <- sample_metadata$id_acc
met_dt <- opts$acc.cells %>% map(function(cell) {
fread(sprintf("zcat < %s/%s.tsv.gz",io$met.indir,cell), sep="\t", showProgress=FALSE, stringsAsFactors=TRUE) %>%
.[,id_met:=factor(cell)] %>% .[,c("start","end"):=list(pos,pos)] %>%
setkey("chr","start","end") %>%
foverlaps(tss, nomatch=0) %>%
.[,dist:=ifelse(strand %in% c("+","*"),pos-TSS,TSS-pos)] %>%
.[,c("id_met","ens_id","dist","rate")]
}) %>% rbindlist()
# acc_dt <- opts$acc.cells %>% map(function(cell) {
#   fread(sprintf("zcat < %s/%s.tsv.gz",io$acc.indir,cell), sep="\t", showProgress=FALSE, stringsAsFactors=TRUE) %>%
#     .[,id_acc:=factor(cell)] %>% .[,c("start","end"):=list(pos,pos)] %>%
#     setkey("chr","start","end") %>%
#     foverlaps(tss, nomatch=0) %>%
#     .[,dist:=ifelse(strand %in% c("+","*"),pos-TSS,TSS-pos)] %>%
#     .[,c("id_acc","ens_id","dist","rate")]
# })# %>% rbindlist()
# gc(reset=TRUE)
tmp <- list()
for (cell in opts$acc.cells) {
print(cell)
tmp[[cell]] <- fread(sprintf("zcat < %s/%s.tsv.gz",io$acc.indir,cell), sep="\t", showProgress=FALSE, stringsAsFactors=TRUE) %>%
.[,id_acc:=factor(cell)] %>% .[,c("start","end"):=list(pos,pos)] %>%
setkey("chr","start","end") %>%
foverlaps(tss, nomatch=0) %>%
.[,dist:=ifelse(strand %in% c("+","*"),pos-TSS,TSS-pos)] %>%
.[,c("id_acc","ens_id","dist","rate")]
# gc(reset=TRUE)
}
acc_dt <- rbindlist(tmp)
rm(tmp)
gc(reset=TRUE)
met_dt <- met_dt %>% merge(sample_metadata[,c("id_met","sample","stage","stage_lineage")], by="id_met") %>% .[,id_met:=NULL]
acc_dt <- acc_dt %>% merge(sample_metadata[,c("id_acc","sample","stage","stage_lineage")], by="id_acc") %>% .[,id_acc:=NULL]
# metacc_dt <- merge(met_dt, acc_dt, by=c("sample","ens_id","stage","stage_lineage"), allow.cartesian=TRUE) %>%
#   .[,c("id_met","id_acc"):=NULL] %>%
#   setnames(c("rate.x","rate.y"),c("met.rate","acc.rate"))
# rm(met_dt,acc_dt)
tmp <- seq(from=0-opts$up, to=0+opts$down-opts$window, by=opts$slide)
foo <- data.table(window_center=tmp+(opts$window/2), rel_start=tmp, rel_end=tmp+opts$window)
met_ov_dt <- foverlaps(
x=foo %>% setkey(rel_start,rel_end),
y=met_dt[,c("rel_start","rel_end"):=dist] %>% setkey(rel_start,rel_end)
) %>%
.[,c("i.rel_start","i.rel_end","rel_start","rel_end"):=NULL] %>%
.[,.(met.rate=mean(rate)), by=c("sample","ens_id","window_center","stage","stage_lineage")]
gc()
acc_ov_dt <- foverlaps(
x=foo %>% setkey(rel_start,rel_end),
y=acc_dt[,c("rel_start","rel_end"):=dist] %>% setkey(rel_start,rel_end),
nomatch = 0
) %>%
.[,c("i.rel_start","i.rel_end","rel_start","rel_end"):=NULL] %>%
.[,.(acc.rate=mean(rate)), by=c("sample","ens_id","window_center","stage","stage_lineage")]
gc(reset=TRUE)
acc_ov_dt <- foverlaps(
x=foo %>% setkey(rel_start,rel_end),
y=acc_dt[,c("rel_start","rel_end"):=dist] %>% setkey(rel_start,rel_end),
nomatch = 0
) %>%
.[,c("i.rel_start","i.rel_end","rel_start","rel_end"):=NULL] %>%
.[,.(acc.rate=mean(rate)), by=c("sample","ens_id","window_center","stage","stage_lineage")]
gc(reset=TRUE)
acc_ov_dt <- foverlaps(
x=foo %>% setkey(rel_start,rel_end),
y=acc_dt[,c("rel_start","rel_end"):=dist] %>% setkey(rel_start,rel_end),
nomatch = 0
) %>%
.[,c("i.rel_start","i.rel_end","rel_start","rel_end"):=NULL] %>%
.[,.(acc.rate=mean(rate)), by=c("sample","ens_id","window_center","stage","stage_lineage")]
library(data.table)
library(purrr)
library(ggplot2)
library(RColorBrewer)
matrix.please <- function(x) {
m<-as.matrix(x[,-1])
# rownames(m)<-x[,1]
rownames(m)<-x[[1]]
m
}
setkeyrev <- function(inputDT,...){
setkey(inputDT, ...)
setorderv(inputDT, key(inputDT), order = -1)
invisible(inputDT)
}
####################
## Define options ##
####################
opts <- list()
# Define annotations
opts$annos <- c(
"prom_2000_2000_noncgi",
"prom_2000_2000_cgi",
"LINE",
"LTR",
"E3.5_Distal_H3K27ac",
"E6.5_Distal_H3K27ac",
"Wei_Distal_K27ac_intersect",
"CGI"
)
# Define stage transitions
opts$transitions <- c("E4.5_vs_E5.5", "E5.5_vs_E6.5", "E6.5_vs_E7.5")
foo <- list()
for (i in transitions) {
foo[[i]] <- list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE) %>%
map(~ fread(sprintf("zcat < %s", .)) ) %>% rbindlist %>% .[,stage_transition:=i]
}
for (i in opts$transitions) {
foo[[i]] <- list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE) %>%
map(~ fread(sprintf("zcat < %s", .)) ) %>% rbindlist %>% .[,stage_transition:=i]
}
i
list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE)
list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE)
i
?list.files
# Define stage transitions
opts$transitions <- c("E4.5_vs_E5.5.*", "E5.5_vs_E6.5", "E6.5E6.75_vs_E7.5")
i=opts$transitions[1]
list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE)
# Define annotations
opts$annos <- c(
"prom_2000_2000_noncgi",
"prom_2000_2000_cgi",
"LINE",
"LTR",
# "E3.5_Distal_H3K27ac",
# "E6.5_Distal_H3K27ac",
# "Wei_Distal_K27ac_intersect",
"CGI"
)
# Define stage transitions
opts$transitions <- c("E4.5_vs_E5.5.*", "E5.5_vs_E6.5*", "E6.5E6.75_vs_E7.5*")
foo <- list()
for (i in opts$transitions) {
foo[[i]] <- list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE) %>%
map(~ fread(sprintf("zcat < %s", .)) ) %>% rbindlist %>% .[,stage_transition:=i]
}
list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE)
i
# Define stage transitions
opts$transitions <- c("E4.5_vs_E5.5.*", "E5.5_vs_E6.5.*", "E6.5E6.75_vs_E7.5.*")
foo <- list()
for (i in opts$transitions) {
foo[[i]] <- list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE) %>%
map(~ fread(sprintf("zcat < %s", .)) ) %>% rbindlist %>% .[,stage_transition:=i]
}
i
list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE)
i
list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE)
i
i=opts$transitions[1]
i
# Define stage transitions
opts$transitions <- c("E4.5_vs_E5.5", "E5.5_vs_E6.5", "E6.5E6.75_vs_E7.5")
i=opts$transitions[1]
i
list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE)
foo <- list()
for (i in opts$transitions) {
foo[[i]] <- list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE) %>%
map(~ fread(sprintf("zcat < %s", .)) ) %>% rbindlist %>% .[,stage_transition:=i]
}
i
list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE) %>%
map(~ fread(sprintf("zcat < %s", .)) )
list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE)
i
list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE)
foo
opts$transitions
for (i in opts$transitions) {
foo[[i]] <- list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE) %>%
map(~ fread(sprintf("zcat < %s", .)) ) %>% rbindlist %>% .[,stage_transition:=i]
}
library(data.table)
library(purrr)
library(ggplot2)
library(RColorBrewer)
matrix.please <- function(x) {
m<-as.matrix(x[,-1])
# rownames(m)<-x[,1]
rownames(m)<-x[[1]]
m
}
setkeyrev <- function(inputDT,...){
setkey(inputDT, ...)
setorderv(inputDT, key(inputDT), order = -1)
invisible(inputDT)
}
####################
## Define options ##
####################
opts <- list()
# Define annotations
opts$annos <- c(
"prom_2000_2000_noncgi",
"prom_2000_2000_cgi",
"LINE",
"LTR",
# "E3.5_Distal_H3K27ac",
# "E6.5_Distal_H3K27ac",
# "Wei_Distal_K27ac_intersect",
"CGI"
)
# Define stage transitions
opts$transitions <- c("E4.5_vs_E5.5", "E5.5_vs_E6.5", "E6.5E6.75_vs_E7.5")
###############
## Load data ##
###############
foo <- list()
for (i in opts$transitions) {
foo[[i]] <- list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE) %>%
map(~ fread(sprintf("zcat < %s", .)) ) %>% rbindlist %>% .[,stage_transition:=i]
}
i
library(data.table)
library(purrr)
library(ggplot2)
library(RColorBrewer)
matrix.please <- function(x) {
m<-as.matrix(x[,-1])
# rownames(m)<-x[,1]
rownames(m)<-x[[1]]
m
}
setkeyrev <- function(inputDT,...){
setkey(inputDT, ...)
setorderv(inputDT, key(inputDT), order = -1)
invisible(inputDT)
}
####################
## Define options ##
####################
opts <- list()
# Define annotations
opts$annos <- c(
"prom_2000_2000_noncgi",
"prom_2000_2000_cgi",
"LINE",
"LTR",
# "E3.5_Distal_H3K27ac",
# "E6.5_Distal_H3K27ac",
# "Wei_Distal_K27ac_intersect",
"CGI"
)
# Define stage transitions
opts$transitions <- c("E4.5_vs_E5.5", "E5.5_vs_E6.5", "E6.5E6.75_vs_E7.5")
###############
## Load data ##
###############
foo <- list()
for (i in opts$transitions) {
foo[[i]] <- list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE) %>%
map(~ fread(sprintf("zcat < %s", .)) ) %>% rbindlist# %>% .[,stage_transition:=i]
}
foo <- rbindlist(foo)
foo
i
foo <- list()
for (i in 1:length(opts$transitions)) {
foo[[i]] <- list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = opts$transitions[i], full.names = TRUE) %>%
map(~ fread(sprintf("zcat < %s", .)) ) %>% rbindlist %>% .[,stage_transition:=opts$transitions[i]]
}
i
library(data.table)
library(purrr)
library(ggplot2)
library(RColorBrewer)
matrix.please <- function(x) {
m<-as.matrix(x[,-1])
# rownames(m)<-x[,1]
rownames(m)<-x[[1]]
m
}
setkeyrev <- function(inputDT,...){
setkey(inputDT, ...)
setorderv(inputDT, key(inputDT), order = -1)
invisible(inputDT)
}
# transitions <- c("E4.5_vs_E5.5", "E5.5_vs_E6.5", "E6.75_vs_E7.5")
transitions <- c("E4.5EPI_vs_E4.5PE", "E6.5E6.75_EPI_vs_E6.5E6.75_PS", "E7.5Ectoderm_E7.5Mesoderm")
foo <- list()
for (i in transitions) {
foo[[i]] <- list.files(path="/Users/ricard/data/gastrulation/met/test/cpg_level/lineages/", pattern = i, full.names = T) %>%
map(~ fread(sprintf("zcat < %s", .)) ) %>% rbindlist %>% .[,stage_transition:=i]
}
foo <- rbindlist(foo)
library(data.table)
library(purrr)
library(ggplot2)
library(RColorBrewer)
matrix.please <- function(x) {
m<-as.matrix(x[,-1])
# rownames(m)<-x[,1]
rownames(m)<-x[[1]]
m
}
setkeyrev <- function(inputDT,...){
setkey(inputDT, ...)
setorderv(inputDT, key(inputDT), order = -1)
invisible(inputDT)
}
####################
## Define options ##
####################
opts <- list()
# Define annotations
opts$annos <- c(
"prom_2000_2000_noncgi",
"prom_2000_2000_cgi",
"LINE",
"LTR",
# "E3.5_Distal_H3K27ac",
# "E6.5_Distal_H3K27ac",
# "Wei_Distal_K27ac_intersect",
"CGI"
)
# Define stage transitions
opts$transitions <- c("E4.5_vs_E5.5", "E5.5_vs_E6.5", "E6.5E6.75_vs_E7.5")
###############
## Load data ##
###############
foo <- list()
for (i in opts$transitions) {
foo[[i]] <- list.files(path="/Users/ricard/data/gastrulation/met/test/cor_samples/", pattern = i, full.names = TRUE) %>%
map(~ fread(sprintf("zcat < %s", .)) ) %>% rbindlist %>% .[,stage_transition:=i]
}
foo <- rbindlist(foo)
foo
.libPaths()
version
version
