foo <- to.plot %>% merge(
data.table(sample = unname(unlist(samples_names(model))), acc = acc), by="sample"
)
p <- ggplot(foo, aes(x=V1, y=V2, color=acc)) +
geom_point(alpha=0.7, size=1.5) +
scale_colour_gradientn(colours = rev(brewer.pal(9, "Blues"))) +
labs(x="UMAP Dimension 1", y=" UMAP Dimension 2") +
theme_pub()
pdf(sprintf("%s/MOFA_%s_%d.pdf",io$outdir,view,factor), width=8.5, height=5.5, useDingbats = F)
print(p)
dev.off()
view <- "Acc Mes Distal H3K27ac"
factor <- 1
tmp <- names(tail(sort(abs(get_weights(model, views=view, factor=factor)[[1]][,1])), n=50))
if (length(model@imputed_data)>0) {
acc <- colMeans(model@imputed_data[[view]][[1]][tmp,], na.rm=T)
} else {
acc <- colMeans(model@training_data[[view]][[1]][tmp,], na.rm=T)
}
if (view=="Acc Ect Distal H3K27ac") {
min_acc <- (-2)
max_acc <- 2
acc[acc<(min_acc)] <- min_acc
acc[acc>(max_acc)] <- max_acc
} else if (view=="Acc Mes Distal H3K27ac") {
min_acc <- (-1.5)
max_acc <- 1.5
acc[acc<(min_acc)] <- min_acc
acc[acc>(max_acc)] <- max_acc
}
# Convert M-values to B-values
acc <- 100*2**acc/(1+2**acc)
foo <- to.plot %>% merge(
data.table(sample = unname(unlist(samples_names(model))), acc = acc), by="sample"
)
p <- ggplot(foo, aes(x=V1, y=V2, color=acc)) +
geom_point(alpha=0.7, size=1.5) +
scale_colour_gradientn(colours = rev(brewer.pal(9, "Blues"))) +
labs(x="UMAP Dimension 1", y=" UMAP Dimension 2") +
theme_pub()
pdf(sprintf("%s/MOFA_%s_%d.pdf",io$outdir,view,factor), width=8.5, height=5.5, useDingbats = F)
print(p)
dev.off()
view <- "Acc Ect Distal H3K27ac"
factor <- 1
tmp <- names(tail(sort(abs(get_weights(model, views=view, factor=factor)[[1]][,1])), n=50))
if (length(model@imputed_data)>0) {
acc <- colMeans(model@imputed_data[[view]][[1]][tmp,], na.rm=T)
} else {
acc <- colMeans(model@training_data[[view]][[1]][tmp,], na.rm=T)
}
if (view=="Acc Ect Distal H3K27ac") {
min_acc <- (-2)
max_acc <- 2
acc[acc<(min_acc)] <- min_acc
acc[acc>(max_acc)] <- max_acc
} else if (view=="Acc Mes Distal H3K27ac") {
min_acc <- (-1.5)
max_acc <- 1.5
acc[acc<(min_acc)] <- min_acc
acc[acc>(max_acc)] <- max_acc
}
# Convert M-values to B-values
acc <- 100*2**acc/(1+2**acc)
foo <- to.plot %>% merge(
data.table(sample = unname(unlist(samples_names(model))), acc = acc), by="sample"
)
p <- ggplot(foo, aes(x=V1, y=V2, color=acc)) +
geom_point(alpha=0.7, size=1.5) +
scale_colour_gradientn(colours = rev(brewer.pal(9, "Blues"))) +
labs(x="UMAP Dimension 1", y=" UMAP Dimension 2") +
theme_pub()
pdf(sprintf("%s/MOFA_%s_%d.pdf",io$outdir,view,factor), width=8.5, height=5.5, useDingbats = F)
print(p)
dev.off()
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
x = c(rnorm(1e6, mean=-1, sd=1),rnorm(1e6, mean=1, sd=1))
) %>% gather()
df
library(magrittr)
library(tidyr)
library(ggplot2)
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
x = c(rnorm(1e6, mean=-1, sd=1),rnorm(1e6, mean=1, sd=1))
) %>% gather()
df
p <- ggplot(df, aes(x=value, fill=key)) +
geom_density(alpha=0.6) +
lims(x=c(-3,3)) +
geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
p
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
x = c(rnorm(1e5, mean=-1, sd=0.1),rnorm(1e5, mean=1, sd=0.1))
) %>% gather()
p <- ggplot(df, aes(x=value, fill=key)) +
geom_density(alpha=0.6) +
# lims(x=c(-3,3)) +
geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
print(p)
library(magrittr)
library(tidyr)
library(ggplot2)
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
x = c(rnorm(1e5, mean=-1, sd=0.2),rnorm(1e5, mean=1, sd=0.2))
) %>% gather()
p <- ggplot(df, aes(x=value, fill=key)) +
geom_density(alpha=0.6) +
# lims(x=c(-3,3)) +
geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
# pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
# dev.off()
source('~/thesis/ricard_thesis/Chapter2/Figs/plot_KL.R', echo=TRUE)
source('~/thesis/ricard_thesis/Chapter2/Figs/plot_KL.R', echo=TRUE)
source('~/thesis/ricard_thesis/Chapter2/Figs/plot_KL.R', echo=TRUE)
source('~/thesis/ricard_thesis/Chapter2/Figs/plot_KL.R', echo=TRUE)
source('~/thesis/ricard_thesis/Chapter2/Figs/plot_KL.R', echo=TRUE)
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
x = c(rnorm(1e5, mean=-1.5, sd=0.5),rnorm(1e5, mean=1.5, sd=0.5)),
kl_pq = rnorm(1e5, mean=-1.5, sd=0.1),
kl_qp = rnorm(1e5, mean=0, sd=2)
) %>% gather()
p <- ggplot(df, aes(x=value, fill=key)) +
geom_density(alpha=0.6) +
lims(x=c(-4,4)) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
# pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
x = c(rnorm(1e5, mean=-1.5, sd=0.5),rnorm(1e5, mean=1.5, sd=0.5)),
kl_pq = rnorm(1e5, mean=-1.5, sd=0.2),
kl_qp = rnorm(1e5, mean=0, sd=2)
) %>% gather()
library(magrittr)
library(tidyr)
library(ggplot2)
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
x = c(rnorm(1e5, mean=-1.5, sd=0.5),rnorm(1e5, mean=1.5, sd=0.5)),
kl_pq = rnorm(1e5, mean=-1.5, sd=0.2),
kl_qp = rnorm(1e5, mean=0, sd=2)
) %>% gather()
p <- ggplot(df, aes(x=value, fill=key)) +
geom_density(alpha=0.6) +
lims(x=c(-4,4)) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
# pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
# dev.off()
?geom_density
p <- ggplot(df, aes(x=value, fill=key)) +
geom_density(alpha=0.6, y=..scaled..) +
lims(x=c(-4,4)) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
p <- ggplot(df, aes(x=value, fill=key)) +
geom_density(aes(y=..scaled..), alpha=0.6) +
lims(x=c(-4,4)) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
p
library(magrittr)
library(tidyr)
library(ggplot2)
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
x = c(rnorm(1e5, mean=-1.5, sd=0.5),rnorm(1e5, mean=1.5, sd=0.5)),
kl_pq = rnorm(1e5, mean=-1.5, sd=0.3),
kl_qp = rnorm(2e5, mean=0, sd=10)
) %>% gather()
p <- ggplot(df, aes(x=value, fill=key)) +
geom_density(aes(y=..scaled..), alpha=0.6) +
lims(x=c(-4,4)) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
# pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
# dev.off()
library(magrittr)
library(tidyr)
library(ggplot2)
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
x = c(rnorm(1e5, mean=-1.5, sd=0.5),rnorm(1e5, mean=1.5, sd=0.5)),
kl_pq = rnorm(1e5, mean=-1.5, sd=0.3),
kl_qp = rnorm(2e5, mean=0, sd=5)
) %>% gather()
p <- ggplot(df, aes(x=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_density(alpha=0.6) +
lims(x=c(-4,4)) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
# pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
# dev.off()
library(magrittr)
library(tidyr)
library(ggplot2)
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
x = c(rnorm(1e5, mean=-1.5, sd=0.5),rnorm(1e5, mean=1.5, sd=0.5)),
kl_pq = rnorm(1e5, mean=-1.5, sd=0.3),
kl_qp = rnorm(2e5, mean=0, sd=2)
) %>% gather()
p <- ggplot(df, aes(x=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_density(alpha=0.6) +
lims(x=c(-4,4)) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
# pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
# dev.off()
library(magrittr)
library(tidyr)
library(ggplot2)
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
x = c(rnorm(1e5, mean=-1.5, sd=0.5),rnorm(1e5, mean=1.5, sd=0.5)),
kl_pq = rnorm(1e5, mean=-1.5, sd=0.3),
kl_qp = rnorm(2e5, mean=0, sd=1.5)
) %>% gather()
p <- ggplot(df, aes(x=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_density(alpha=0.6) +
lims(x=c(-4,4)) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
# pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
# dev.off()
library(magrittr)
library(tidyr)
library(ggplot2)
# Simulate observations as a mixture model of two gaussians
df <- data.frame(
y = c(rnorm(1e5, mean=-1.5, sd=0.5),rnorm(1e5, mean=1.5, sd=0.5)),
kl_pq = rnorm(1e5, mean=-1.5, sd=0.3),
kl_qp = rnorm(2e5, mean=0, sd=1.5)
) %>% gather()
colors <- c(
y="grey70",
kl_pq = "#66c2a5",
kl_qp = "#fc8d62"
)
p <- ggplot(df, aes(x=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_density(alpha=0.6) +
lims(x=c(-4,4)) +
scale_fill_manual(values=colors) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
# pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
# dev.off()
p <- ggplot(df, aes(x=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_density(alpha=0.4) +
lims(x=c(-4,4)) +
scale_fill_manual(values=colors) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
# pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
p <- ggplot(df, aes(x=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_density(alpha=0.4) +
lims(x=c(-4.5,4.5)) +
scale_fill_manual(values=colors) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
# pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
dev.off()
# Simulate observations as a mixture model of two gaussians
y = c(rnorm(1e5, mean=-1.5, sd=0.5),rnorm(1e5, mean=1.5, sd=0.5))
# Simulate fitting with KL[p||q]
kl_pq = rnorm(1e5, mean=-1.5, sd=0.3)
# Simulate fitting with KL[q||p]
kl_qp = rnorm(2e5, mean=0, sd=1.5)
var(y)
var(kl_pq)
var(kl_qp)
df <- data.frame(y=var(y), kl_pq=var(kl_pq), kl_qp=var(kl_qp)) %>% gather()
df
df.var <- data.frame(y=var(y), kl_pq=var(kl_pq), kl_qp=var(kl_qp)) %>% gather()
p <- ggplot(df.var, aes(x=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_density(alpha=0.4) +
lims(x=c(-4.5,4.5)) +
scale_fill_manual(values=colors) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
p <- ggplot(df.var, aes(x=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_bar(stat="identity") +
scale_fill_manual(values=colors) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
p
p <- ggplot(df.var, aes(y=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_bar(stat="identity") +
scale_fill_manual(values=colors) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Variance") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
p
p <- ggplot(df.var, aes(x=key, y=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_bar(stat="identity") +
scale_fill_manual(values=colors) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Variance") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
p
p <- ggplot(df.var, aes(x=key, y=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_bar(stat="identity", color="black") +
scale_fill_manual(values=colors) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Variance") +
theme_bw() +
theme(
legend.position = "top",
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
print(p)
p <- ggplot(df.var, aes(x=key, y=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_bar(stat="identity", color="black") +
scale_fill_manual(values=colors) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Variance") +
theme_bw() +
theme(
legend.position = "top",
legend.title = element_blank(),
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
print(p)
library(magrittr)
library(tidyr)
library(ggplot2)
# Simulate observations as a mixture model of two gaussians
y = c(rnorm(1e5, mean=-1.5, sd=0.5),rnorm(1e5, mean=1.5, sd=0.5))
# Simulate fitting with KL[p||q]
kl_pq = rnorm(1e5, mean=-1.5, sd=0.3)
# Simulate fitting with KL[q||p]
kl_qp = rnorm(2e5, mean=0, sd=1.5)
df <- data.frame(y=y, kl_pq=kl_pq, kl_qp=kl_qp) %>% gather()
colors <- c(
y="grey70",
kl_pq = "#66c2a5",
kl_qp = "#fc8d62"
)
p <- ggplot(df, aes(x=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_density(alpha=0.4) +
lims(x=c(-4.5,4.5)) +
scale_fill_manual(values=colors) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Density") +
theme_bw() +
theme(
legend.position = "top",
legend.title = element_blank(),
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL.pdf", width = 8, height = 5)
print(p)
dev.off()
df.var <- data.frame(y=var(y), kl_pq=var(kl_pq), kl_qp=var(kl_qp)) %>% gather()
p <- ggplot(df.var, aes(x=key, y=value, fill=key)) +
# geom_density(aes(y=..scaled..), alpha=0.6) +
geom_bar(stat="identity", color="black", alpha=0.8) +
scale_fill_manual(values=colors) +
# geom_vline(xintercept=0, linetype="dashed") +
labs(x="", y="Variance") +
theme_bw() +
theme(
legend.position = "top",
legend.title = element_blank(),
axis.text = element_text(color="black"),
axis.title = element_text(size=rel(1.2))
)
pdf(file="/Users/ricard/thesis/ricard_thesis/Chapter2/Figs/KL_var.pdf", width = 8, height = 5)
print(p)
dev.off()
