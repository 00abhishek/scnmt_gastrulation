met_dt.permuted <- met_dt %>% copy %>% .[,rate:=sample(rate)]
source("/Users/ricard/gastrulation/metaccrna/differential/load_data.R")
diff.met <- diff.met %>%
.[,anno:=stringr::str_replace_all(anno,opts$met.annos)] %>%
.[anno=="Endoderm enhancers"] %>%
.[lineage%in%c("Endoderm")] %>%
.[,c("id","anno","diff","padj_fdr","sig","lineage")]
# diff.acc <- diff.acc %>%
#   .[,anno:=stringr::str_replace_all(anno,opts$acc.annos)] %>%
#   .[,c("id","anno","diff","sig","lineage")]
N <- 100
diff.met <- diff.met %>% split(.$anno) %>% map(~ setorder(.,padj_fdr) %>% head(n=N)) %>% rbindlist
met_dt <- met_dt %>% split(.$anno) %>%
map2(.,names(.), function(x,y) x[id%in%diff.met[sig==T & anno==y,id]]) %>%
rbindlist %>% droplevels()
# acc_dt <- acc_dt %>% split(.$anno) %>%
#   map2(.,names(.), function(x,y) x[id%in%diff.acc[sig==T & anno==y,id]]) %>%
#   rbindlist %>% droplevels()
foo <- met_dt[,.(var=var(rate)),by=c("id","anno")]
bar <- met_dt[stage_lineage=="E7.5_Endoderm",.(var=var(rate)), by=c("id","anno")]
foobar <- merge(foo,bar, by=c("id","anno"), suffixes = c(".intergroup", ".intragroup")) %>%
setorder(var.intergroup) %>% .[,id:=factor(id,levels=id)] %>%
melt(id.vars=c("id","anno"))
baz <- met_dt.permuted[,.(var=var(rate)), by=c("id","anno")]
head(foo)
head(baz)
head(bar)
View(foobar)
foobar <- merge(foo,bar, by=c("id","anno"), suffixes = c(".intergroup", ".intragroup"))
View(foobar)
head(foobar)
foobar <- merge(foo,bar, by=c("id","anno"), suffixes = c(".intergroup", ".intragroup")) %>%
setorder(var.intergroup) %>% .[,id:=factor(id,levels=id)] %>%
.[,ratio:=var.intergroup/var.intragroup] %>%
melt(id.vars=c("id","anno"))
View(foobar)
foobar <- merge(foo,bar, by=c("id","anno"), suffixes = c(".intergroup", ".intragroup")) %>%
setorder(var.intergroup) %>% .[,id:=factor(id,levels=id)] %>%
.[,ratio:=var.intergroup/var.intragroup] %>%
melt(id.vars=c("id","anno","ratio"))
foobar <- merge(foo,bar, by=c("id","anno"), suffixes = c(".intergroup", ".intragroup")) %>%
setorder(var.intergroup) %>% .[,id:=factor(id,levels=id)] %>%
.[,ratio:=var.intergroup/var.intragroup] #%>%
View(foobar)
p <- ggbarplot(foobar, x="id", y="ratio") +
scale_fill_brewer(palette = "Dark2") +
labs(x="Enhancers", y="Variance") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title = element_blank()
)
# pdf(paste0(io$outdir,"/Endoderm_enhancers.pdf"), useDingbats = F, width=8, height=4)
print(p)
# dev.off()
p <- ggbarplot(foobar, x="id", y="ratio") +
labs(x="Enhancers", y="Variance") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title = element_blank()
)
# pdf(paste0(io$outdir,"/Endoderm_enhancers.pdf"), useDingbats = F, width=8, height=4)
print(p)
# dev.off()
met_dt
unique(met_dt$sample)
unique(met_dt[stage_lineage=="E7.5_Endoderm",sample)
unique(met_dt[stage_lineage=="E7.5_Endoderm",sample])
View(bar)
View(diff.met)
library(data.table)
library(purrr)
library(ggplot2)
library(ggpubr)
theme_pb <- function() {
theme(
plot.title = element_text(size=rel(1.2), color="black", hjust=0.5),
axis.text.x = element_text(size=rel(1.4), color="black", angle=50, vjust=1, hjust=1),
axis.text.y = element_text(size=rel(1.2), color="black"),
axis.title.y = element_text(size=rel(1.4), color="black"),
strip.background = element_rect(fill="#F37A71"),
strip.text = element_text(size=rel(1.8), color="black"),
legend.position="top",
legend.title = element_blank()
)
}
io <- list()
io$sample.metadata <- "/Users/ricard/data/gastrulation/sample_metadata.txt"
io$met.dir <- "/Users/ricard/data/gastrulation/met/feature_level"
# io$acc.dir <- "/Users/ricard/data/gastrulation/acc/feature_level"
io$outdir <- "/Users/ricard/data/gastrulation/met/homogeneous_epigenotype"
# Folders with the differential analysis results
io$diff.met <- "/Users/ricard/data/gastrulation/met/differential/feature_level"
# io$diff.acc <- "/Users/ricard/data/gastrulation/acc/differential/feature_level"
opts <- list()
opts$stage_lineage <- c(
# "E7.5_Ectoderm",
"E7.5_Mesoderm",
"E7.5_Endoderm"
)
opts$met.annos <- c(
# "H3K27ac_distal_E7.5_Mes_intersect12"="Mesoderm enhancers"
"H3K27ac_distal_E7.5_End_intersect12"="Endoderm enhancers"
# "H3K27ac_distal_E7.5_Ect_intersect12"="Ectoderm enhancers"
)
opts$diff.type <- 1
opts$min.fdr <- 0.01
opts$min.acc.diff <- 10
opts$min.met.diff <- 10
tmp <- fread(io$sample.metadata) %>%
.[,stage_lineage:=paste(stage,lineage10x_2,sep="_")] %>%
.[stage_lineage%in%opts$stage_lineage]
opts$met_cells <- tmp %>% .[pass_metQC==T,id_met]
opts$acc_cells <- tmp %>% .[pass_accQC==T,id_acc]
sample_metadata <- fread(io$sample.metadata) %>%
.[,c("sample","id_acc","id_met","stage","lineage10x_2")] %>%
.[,stage_lineage:=paste(stage,lineage10x_2,sep="_")] %>%
.[id_met%in%opts$met_cells | id_acc%in%opts$acc_cells]
met_dt <- lapply(names(opts$met.annos), function(n) {
fread(sprintf("%s/%s.tsv.gz",io$met.dir,n)) %>% .[V1%in%opts$met_cells]
}) %>% rbindlist %>% setnames(c("id_met","id","anno","Nmet","Ntotal","rate"))
# acc_dt <- lapply(names(opts$acc.annos), function(n) {
#   fread(sprintf("%s/%s.tsv.gz",io$acc.dir,n)) %>% .[V1%in%opts$acc_cells]
# }) %>% rbindlist %>% setnames(c("id_acc","id","anno","Nmet","Ntotal","rate"))
# acc_dt <- merge(acc_dt, sample_metadata, by="id_acc")
met_dt <- merge(met_dt, sample_metadata, by="id_met")
met_dt <- met_dt %>% .[,anno:=stringr::str_replace_all(anno,opts$met.annos)]
# acc_dt <- acc_dt %>% .[,anno:=stringr::str_replace_all(anno,opts$acc.annos)]
met_dt.permuted <- met_dt %>% copy %>% .[,rate:=sample(rate)]
source("/Users/ricard/gastrulation/metaccrna/differential/load_data.R")
diff.met <- diff.met %>%
.[,anno:=stringr::str_replace_all(anno,opts$met.annos)] %>%
.[anno=="Endoderm enhancers"] %>%
.[lineage%in%c("Endoderm")] %>%
.[,c("id","anno","diff","padj_fdr","sig","lineage")]
# diff.acc <- diff.acc %>%
#   .[,anno:=stringr::str_replace_all(anno,opts$acc.annos)] %>%
#   .[,c("id","anno","diff","sig","lineage")]
N <- 100
diff.met <- diff.met %>% split(.$anno) %>% map(~ setorder(.,padj_fdr) %>% head(n=N)) %>% rbindlist
met_dt <- met_dt %>% split(.$anno) %>%
map2(.,names(.), function(x,y) x[id%in%diff.met[sig==T & anno==y,id]]) %>%
rbindlist
# acc_dt <- acc_dt %>% split(.$anno) %>%
#   map2(.,names(.), function(x,y) x[id%in%diff.acc[sig==T & anno==y,id]]) %>%
#   rbindlist
foo <- met_dt[,.(var=var(rate)),by=c("id","anno")]
bar <- met_dt[stage_lineage=="E7.5_Endoderm",.(var=var(rate)), by=c("id","anno")]
# baz <- met_dt.permuted[,.(var=var(rate)), by=c("id","anno")]
foobar <- merge(foo,bar, by=c("id","anno"), suffixes = c(".intergroup", ".intragroup")) %>%
setorder(var.intergroup) %>% .[,id:=factor(id,levels=id)] %>%
.[,ratio:=var.intergroup/var.intragroup] #%>%
# melt(id.vars=c("id","anno","ratio"))
p <- ggbarplot(foobar, x="id", y="ratio") +
labs(x="Enhancers", y="Variance") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title = element_blank()
)
# pdf(paste0(io$outdir,"/Endoderm_enhancers.pdf"), useDingbats = F, width=8, height=4)
print(p)
# dev.off()
p <- ggbarplot(foobar, x="id", y="value", fill="variable") +
scale_fill_brewer(palette = "Dark2") +
labs(x="Enhancers", y="Variance") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title = element_blank()
)
head(foo)
head(bar)
foo <- met_dt[,.(var=var(rate)),by=c("id","anno")]
bar <- met_dt[stage_lineage=="E7.5_Endoderm"] %>% .[.(var=var(rate)), by=c("id","anno")]
bar <- met_dt[stage_lineage=="E7.5_Endoderm"] %>% .[,.(var=var(rate)), by=c("id","anno")]
View(bar)
View(foo)
?merge
foobar <- merge(foo,bar, by=c("id","anno"), suffixes = c(".intergroup", ".intragroup")) %>%
setorder(var.intergroup) %>%
.[,ratio:=var.intragroup/var.intergroup] #%>%
p <- ggbarplot(foobar, x="id", y="ratio") +
labs(x="Enhancers", y="Variance") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title = element_blank()
)
# pdf(paste0(io$outdir,"/Endoderm_enhancers.pdf"), useDingbats = F, width=8, height=4)
print(p)
# dev.off()
p <- ggbarplot(foobar, x="id", y="ratio") +
geom_hline(yintercept=1, linetype="dashed", alpha=0.75, size=0.75) +
labs(x="Enhancers", y="Variance") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title = element_blank()
)
# pdf(paste0(io$outdir,"/Endoderm_enhancers.pdf"), useDingbats = F, width=8, height=4)
print(p)
# dev.off()
foobar <- merge(foo,bar, by=c("id","anno"), suffixes = c(".intergroup", ".intragroup")) %>%
setorder(var.intergroup) %>%
.[,ratio:=var.intragroup/var.intergroup] %>%
setorder(ratio) %>% .[,id:=factor(id,levels=id)]
p <- ggbarplot(foobar, x="id", y="ratio") +
geom_hline(yintercept=1, linetype="dashed", alpha=0.75, size=0.75) +
labs(x="Enhancers", y="Variance") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title = element_blank()
)
# pdf(paste0(io$outdir,"/Endoderm_enhancers.pdf"), useDingbats = F, width=8, height=4)
print(p)
# dev.off()
p <- ggbarplot(foobar, x="id", y="ratio") +
geom_hline(yintercept=1, linetype="dashed", alpha=0.75, size=0.75) +
labs(x="Enhancers", y="Ratio of intra-group variance to inter-group variance") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title = element_blank()
)
# pdf(paste0(io$outdir,"/Endoderm_enhancers.pdf"), useDingbats = F, width=8, height=4)
print(p)
# dev.off()
suppressMessages(library(MOFA))
suppressMessages(library(reticulate))
suppressMessages(library(argparse))
# Define arguments
p <- ArgumentParser(description='')
p$add_argument('-i','--trial', type="integer", help='Trial number')
args <- p$parse_args(commandArgs(TRUE))
if (is.null(args$trial)) args$trial <- 1
# Load settings
if (grepl("ricard",Sys.info()['nodename'])) {
source("/Users/ricard/gastrulation_E3.5/metaccrna/mofa/load_settings.R")
use_python("/Users/ricard/anaconda3/bin/python")
} else {
source("/homes/ricard/gastrulation/metaccrna/mofa/load_settings.R")
use_python("/nfs/software/stegle/users/ricard/anaconda/bin/python")
}
# Load data
if (grepl("ricard",Sys.info()['nodename'])) {
source("/Users/ricard/gastrulation_E3.5/metaccrna/mofa/load_data.R")
} else {
source("/homes/ricard/gastrulation_E3.5/metaccrna/mofa/load_data.R")
}
# Create MOFAobject
MOFAobject <- createMOFAobject(all_matrix_list)
# Data processing options
DataOptions <- getDefaultDataOptions()
# Model options
ModelOptions <- getDefaultModelOptions(MOFAobject)
ModelOptions$numFactors <- 5
# Training options
TrainOptions <- getDefaultTrainOptions()
TrainOptions$maxiter <- 5000
TrainOptions$tolerance <- 0.50
TrainOptions$DropFactorThreshold <- 0
TrainOptions$seed <- args$trial
# Prepare MOFAobject for training
MOFAmodel <- prepareMOFA(MOFAobject,
DataOptions = DataOptions,
ModelOptions = ModelOptions,
TrainOptions = TrainOptions
)
# Train the model
outfile <- sprintf("%s/hdf5/model_%d.hdf5",io$outdir,args$trial)
model <- runMOFA(MOFAmodel, outfile)
sample_metadata <- fread(io$sample.metadata) %>%
.[,c("sample","id_rna","id_met","id_acc","stage","lineage10x","lineage10x_2","plate")]
sample_metadata_filt <- sample_metadata %>%
setkey(sample) %>% .[MOFA::sampleNames(model)]
opts$views_names <- c(
"met_H3K27ac_distal_E7.5_Ect_intersect12"="Ectoderm Enhancers (met)",
"met_H3K27ac_distal_E7.5_Mes_intersect12"="Mesoderm Enhancers (met)",
"met_H3K27ac_distal_E7.5_End_intersect12"="Endoderm Enhancers (met)",
"acc_H3K27ac_distal_E7.5_Ect_intersect12"="Ectoderm Enhancers (acc)",
"acc_H3K27ac_distal_E7.5_Mes_intersect12"="Mesoderm Enhancers (acc)",
"acc_H3K27ac_distal_E7.5_End_intersect12"="Endoderm Enhancers (acc)",
"met_prom_2000_2000"="Promoters (met)",
"acc_prom_2000_2000"="Promoters (acc)",
"rna" = "RNA expression"
)
viewNames(model) <- stringr::str_replace_all(viewNames(model), opts$views_names)
plotVarianceExplained(model, cluster=F)
fvar_mk <- calculateVarianceExplained(model)$R2PerFactor
fvar_mk[fvar_mk<0.001] <- 0
fvar_mk[fvar_mk>0.05] <- 0.05
# convert matrix to data frame for ggplot2
fvar_mk_df <- reshape2::melt(fvar_mk, varnames=c("factor","view"))
fvar_mk_df$factor <- factor(fvar_mk_df$factor)
# Grid plot with the variance explained per factor and view
p <- ggplot(fvar_mk_df, aes_string(x="view",y="factor")) +
geom_tile(aes_string(fill="value"), color="black") +
guides(fill=guide_colorbar("R2")) +
scale_fill_gradientn(colors=c("gray97","darkblue"), guide="colorbar") +
ylab("Latent factor") +
theme(
axis.title.x = element_blank(),
axis.text.x = element_text(size=11, angle=60, hjust=1, vjust=1, color="black"),
axis.text.y = element_text(size=12, color="black"),
axis.title.y = element_text(size=15),
axis.line = element_blank(),
axis.ticks =  element_blank(),
panel.background = element_blank()
)
print(p)
# pdf(paste0(io$outdir,"/pdf/varianceExplained.pdf"), useDingbats = F, onefile = F, width=12, height=5)
# p
# dev.off()
p <- plot_factor(
model,
factor = 1,
# color_by = "Mesp1",
color_by = "lineage10x_2",
dodge=F, dot_size=1.75, legend = F, rasterize = F
)
p <- plotFactorScatter(model,
factors=c(1,3),
color_by=sample_metadata_filt$lineage10x_2,
dot_size = 1.5
)
# p <- p + scale_color_manual(values=opts$colors)
print(p)
# pdf(paste0(io$outdir,"/pdf/scatterplot_F1vsF2_v2.pdf"), useDingbats = F, onefile = F, width=6, height=4)
# print(p)
# dev.off()
p <- plotFactorScatter(model,
factors=c(1,2),
color_by=sample_metadata_filt$lineage10x_2,
dot_size = 1.5
)
# p <- p + scale_color_manual(values=opts$colors)
print(p)
# pdf(paste0(io$outdir,"/pdf/scatterplot_F1vsF2_v2.pdf"), useDingbats = F, onefile = F, width=6, height=4)
# print(p)
# dev.off()
p <- plotFactorScatter(model,
factors=c(1,3),
color_by=sample_metadata_filt$lineage10x_2,
dot_size = 1.5
)
# p <- p + scale_color_manual(values=opts$colors)
print(p)
# pdf(paste0(io$outdir,"/pdf/scatterplot_F1vsF2_v2.pdf"), useDingbats = F, onefile = F, width=6, height=4)
# print(p)
# dev.off()
plotFactorCor(model)
p <- plotFactorScatter(model,
factors=c(1,2),
color_by=sample_metadata_filt$lineage10x_2,
dot_size = 1.5
)
# p <- p + scale_color_manual(values=opts$colors)
print(p)
# pdf(paste0(io$outdir,"/pdf/scatterplot_F1vsF2_v2.pdf"), useDingbats = F, onefile = F, width=6, height=4)
# print(p)
# dev.off()
p <- plotFactorScatter(model,
factors=c(1,4),
color_by=sample_metadata_filt$lineage10x_2,
dot_size = 1.5
)
# p <- p + scale_color_manual(values=opts$colors)
print(p)
# pdf(paste0(io$outdir,"/pdf/scatterplot_F1vsF2_v2.pdf"), useDingbats = F, onefile = F, width=6, height=4)
# print(p)
# dev.off()
p <- plotFactorScatter(model,
factors=c(1,5),
color_by=sample_metadata_filt$lineage10x_2,
dot_size = 1.5
)
# p <- p + scale_color_manual(values=opts$colors)
print(p)
# pdf(paste0(io$outdir,"/pdf/scatterplot_F1vsF2_v2.pdf"), useDingbats = F, onefile = F, width=6, height=4)
# print(p)
# dev.off()
#############################################################################
## Script to plot the results from the differential methylation analysis ##
#############################################################################
library(data.table)
library(purrr)
library(ggplot2)
library(RColorBrewer)
#####################
## Define settings ##
#####################
## I/O ##
io <- list()
io$input.dir <- "/Users/ricard/data/gastrulation_E3.5/met/differential"
io$outdir <- "/Users/ricard/data/gastrulation_E3.5/met/differential/pdf"
## Options ##
opts <- list()
opts$comparisons <- c(
"E3.5ICM_vs_E4.5Epiblast",
"E3.5ICM_vs_E4.5Primitive_endoderm"
)
# Select genomic contexts
opts$annos <- c(
# "CGI",
"H3K27ac_distal_E7.5_Ect_intersect12_500",
"H3K27ac_distal_E7.5_End_intersect12_500",
"H3K27ac_distal_E7.5_Mes_intersect12_500",
"H3K4me3_E7.5_Ect",
"H3K4me3_E7.5_End",
"H3K4me3_E7.5_Mes",
"prom_2000_2000"
)
# Load precomputed differential results
diff.results <- lapply(opts$comparisons, function(i)
lapply(opts$annos, function(j)
fread(cmd=sprintf("zcat < %s/%s_%s.txt.gz",io$input.dir,i,j))
) %>% rbindlist %>% .[,comparison:=i]
) %>% rbindlist %>% .[complete.cases(.)]
# Load precomputed differential results
diff.results <- lapply(opts$comparisons, function(i)
lapply(opts$annos, function(j)
fread(cmd=sprintf("zcat < %s/%s_%s.txt.gz",io$input.dir,i,j))
) %>% rbindlist %>% .[,comparison:=i]
) %>% rbindlist %>% .[complete.cases(.)]
gg_barplot <- function(tmp, title = "", ylim=NULL) {
if (is.null(ylim)) {
ylim <- c(min(tmp$value, na.rm=T), max(tmp$value, na.rm=T))
}
p <- ggplot(tmp, aes(x=anno, y=value, group=anno)) +
geom_bar(aes(fill=anno), color="black", stat="identity", position="dodge") +
# scale_fill_manual(values=opts$colors) +
geom_hline(yintercept=0, color="black") +
scale_y_continuous(limits=c(ylim[1],ylim[2])) +
labs(title="", x="", y="Number of hits") +
theme(
plot.title = element_text(size=11, face='bold', hjust=0.5),
axis.text = element_text(size=rel(1.0), color='black'),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size=rel(1.0), color='black'),
axis.line = element_line(color="black"),
legend.position="none",
panel.border=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()
)
return(p)
}
tmp <- diff.results %>%
.[,.(number_positive_hits=sum(sig==T & diff>0), number_negative_hits=sum(sig==T & diff<0)), by=c("anno","comparison")] %>%
.[,number_negative_hits:=-number_negative_hits] %>%
melt(id.vars=c("anno","comparison"))
ylim <- c(min(tmp$value), max(tmp$value))
for (i in unique(diff.results$comparison)) {
p <- gg_barplot(tmp[comparison==i], title=i, ylim=ylim)
# pdf(sprintf("%s/%s.pdf",io$outdir,i), width=6, height=4)
print(p)
# dev.off()
}
###################################################################################
## Script to compute (in parallel) differential accessibility at the feature level ##
###################################################################################
## I/O ##
io <- list()
if (grepl("ricard",Sys.info()['nodename'])) {
io$script <- "/Users/ricard/gastrulation_E3.5/acc/differential/feature_level/diffacc_supervised.R"
io$outdir <- "/Users/ricard/data/gastrulation_E3.5/acc/differential"
} else {
io$script <- "/homes/ricard/gastrulation_E3.5/acc/differential/diffacc_supervised.R"
io$outdir <- "/hps/nobackup/stegle/users/ricard/gastrulation_E3.5/acc/differential"
io$tmpdir <- "/hps/nobackup/stegle/users/ricard/gastrulation_E3.5/acc/differential/tmp"
}
dir.create(io$outdir, showWarnings=F)
## Options ##
opts <- list()
opts$groups <- list(
"E3.5ICM_vs_E4.5Epiblast" = list(c("E3.5_ICM"), c("E4.5_Epiblast")),
"E3.5ICM_vs_E4.5Primitive_endoderm" = list(c("E3.5_ICM"), c("E4.5_Primitive_endoderm"))
)
# Minimum number of cells per group
opts$min.cells <- 10
# Genomic contexts
opts$anno <- c(
# "CGI",
"H3K27ac_distal_E7.5_Ect_intersect12",
"H3K27ac_distal_E7.5_End_intersect12",
"H3K27ac_distal_E7.5_Mes_intersect12",
"H3K4me3_E7.5_Ect",
"H3K4me3_E7.5_End",
"H3K4me3_E7.5_Mes",
# "genebody",
"prom_2000_2000"
# "prom_2000_2000_cgi",
# "prom_2000_2000_noncgi"
)
opts$anno <- c("H3K27ac_distal_E7.5_Ect_intersect12_500")
for (group in names(opts$groups)) {
stage_lineage1 <- opts$groups[[group]][[1]]
stage_lineage2 <- opts$groups[[group]][[2]]
for (anno in opts$anno) {
outfile <- sprintf("%s/%s_%s.txt", io$outdir, group, anno)
# lsf <- sprintf("bsub -M 2048 -n 1 -q standard -o %s/%s_%s.txt", io$tmpdir, group, anno)
lsf <- ""
cmd <- sprintf("%s Rscript %s --anno %s --stage_lineage1 %s --stage_lineage2 %s --min.cells %d --outfile %s",
lsf, io$script, anno, paste(stage_lineage1, collapse=" "), paste(stage_lineage2, collapse=" "), opts$min.cells, outfile)
system(cmd)
}
}
