library(data.table)
library(purrr)
library(VennDiagram)
library(grDevices)
fread_gz <- function(file, ...) {
paste("zcat", file) %>% fread(...)
}
convert_chr_format <- function(chr, to) {
# Function to convert the chr from short to long format and viceversa
# to: "short" or "long"
chr <- as.character(chr)
stopifnot(to %in% c("short","long"))
short_alphabet <- c(1:19,"X","Y","MT")
long_alphabet <- paste("chr",short_alphabet,sep="")
if (to == "short") {
if (all(chr %in% short_alphabet)) {
return(chr)
} else {
stopifnot(all(chr %in% long_alphabet))
names(short_alphabet) <- long_alphabet
return(unname(short_alphabet[chr]))
}
}
if (to == "long") {
if (all(chr %in% long_alphabet)) {
return(chr)
} else {
stopifnot(all(chr %in% short_alphabet))
names(long_alphabet) <- short_alphabet
return(unname(long_alphabet[chr]))
}
}
}
io <- list()
# io$data_dir = "/bi/scratch/Stephen_Clark/gastrulation_data"
# io$bed_files <- paste0(io$data_dir, "/features/filt")
# E7.5 ChIP-seq
e7.5 <- list()
e7.5$distal_h3k27ac_ect <- fread("/Users/ricard/data/gastrulation/features/filt/H3K27ac_distal_E7.5_Ect_intersect12.bed") %>%
# e7.5$distal_h3k27ac_ect <- fread("/Users/ricard/Downloads/H3K27ac_E7.5_distal_Ect_specific_intersect12_top5000.bed") %>%
.[,c(1,2,3)] %>% .[,c("sample","histone"):=list("E7.5_Ectoderm","H3K27ac")]
e7.5$distal_h3k27ac_mes <- fread("/Users/ricard/data/gastrulation/features/filt/H3K27ac_distal_E7.5_Mes_intersect12.bed") %>%
.[,c(1,2,3)] %>% .[,c("sample","histone"):=list("E7.5_Mesoderm","H3K27ac")]
e7.5$distal_h3k27ac_end <- fread("/Users/ricard/data/gastrulation/features/filt/H3K27ac_distal_E7.5_End_intersect12.bed") %>%
.[,c(1,2,3)] %>% .[,c("sample","histone"):=list("E7.5_Endoderm","H3K27ac")]
# Kim et al ChIP-seq
esc_kim <- list()
esc_kim$h3k27ac <- fread("/Users/ricard/data/mm10_regulation/histone_ChIP/ESC_Kim/K27ac_ESC_distal.bed") %>%
.[,c(1,2,3)] %>% .[,c("sample","histone"):=list("ESC_KIM","H3K27ac")]
# ENCODE ESC ChIP-seq
esc_encode <- list()
esc_encode$h3k27ac <- fread("/Users/ricard/data/mm10_regulation/histone_ChIP/ESC_ENCODE/H3K27ac_ENCODE.bed") %>%
.[,c(1,2,3)] %>% .[,c("sample","histone"):=list("ESC_ENCODE","H3K27ac")]
# esc_encode$h3k4me1 <- fread("/Users/ricard/data/mm10_regulation/histone_ChIP/ESC_ENCODE/H3K4me1_ENCODE.bed") %>%
#   .[,c(1,2,3)] %>% .[,c("sample","histone"):=list("ESC_ENCODE","H3K4me1")]
# mEpiSC
mEpiSC <- list()
mEpiSC$h3k27ac <- fread("/Users/ricard/data/mm10_regulation/histone_ChIP/mEPISC/GSM1382219_mEpiSC_H3K27ac_mm10.bed") %>%
.[,c(1,2,3)] %>% .[,c("sample","histone"):=list("mEpiSC","H3K27ac")]
# E11.5 forebrain
e11.5_forebrain <- list()
e11.5_forebrain$h3k27ac <- fread("/Users/ricard/data/mm10_regulation/histone_ChIP/E11.5_forebrain/GSM1264352_Forebrain_E11.5_H3K27ac_rep1_mm10.bed") %>%
.[,c(1,2,3)] %>% .[,c("sample","histone"):=list("e11.5_forebrain","H3K27ac")]
e7.5_df <- e7.5 %>% rbindlist %>% setnames(c("chr","start","end","sample","histone")) %>%
.[,chr:=convert_chr_format(chr,to="short")]
esc_encode_df <- esc_encode %>% rbindlist %>% setnames(c("chr","start","end","sample","histone")) %>%
.[,chr:=convert_chr_format(chr,to="short")]
esc_kim_df <- esc_kim %>% rbindlist %>% setnames(c("chr","start","end","sample","histone")) %>%
.[,chr:=convert_chr_format(chr,to="short")]
mEpiSC_df <- mEpiSC %>% rbindlist %>% setnames(c("chr","start","end","sample","histone")) %>%
.[,chr:=convert_chr_format(chr,to="short")]
e11.5_forebrain_df <- e11.5_forebrain %>% rbindlist %>% setnames(c("chr","start","end","sample","histone")) %>%
.[,chr:=convert_chr_format(chr,to="short")]
# e7.5_df[,.N,by=c("sample","histone")]
# foo <- e7.5_df %>% .[,sample:=factor(sample, levels=c("E7.5_Ectoderm","E7.5_Mesoderm","E7.5_Endoderm"))] %>%
#   split(.$sample) %>%
#   map(~ setkey(.,chr,start,end) %>% foverlaps(e3.5_df[histone=="H3K27ac"] %>% setkey(chr,start,end), nomatch=0) )
# sapply(foo,nrow) / sapply(e7.5,nrow)
foo <- e7.5_df %>% .[,sample:=factor(sample, levels=c("E7.5_Ectoderm","E7.5_Mesoderm","E7.5_Endoderm"))] %>%
split(.$sample) %>%
map(~ setkey(.,chr,start,end) %>% foverlaps(mEpiSC_df[histone=="H3K27ac"] %>% setkey(chr,start,end), nomatch=0, mult="first") )
sapply(foo,nrow)
sapply(foo,nrow) / sapply(e7.5,nrow)
# sapply(e7.5,nrow)
nrow(e7.5$distal_h3k27ac_ect)
library(scater)
library(data.table)
library(purrr)
library(ggplot2)
source("/Users/ricard/gastrulation/rna/differential/utils.R")
MinMeanSEMMax <- function(x) {
v <- c(mean(x) - sd(x)/sqrt(length(x)), mean(x) - sd(x)/sqrt(length(x)), mean(x), mean(x) + sd(x)/sqrt(length(x)), mean(x) + sd(x)/sqrt(length(x)))
names(v) <- c("ymin", "lower", "middle", "upper", "ymax")
v
}
boxplot_theme <- function() {
p <- theme(
plot.title = element_text(size=30, hjust=0.5, margin=margin(0,0,20,0)),
axis.title.y = element_text(colour="black", size=20, vjust=1.5),
axis.title.x = element_text(colour="black", size=20, vjust=1.5, margin=margin(15,0,0,0)),
axis.text.x = element_text(colour="black",size=rel(1.6)),
axis.text.y = element_text(colour="black",size=rel(1.6)),
axis.line = element_line(colour="black", size=rel(0.7)),
axis.ticks.x = element_line(colour="black", size=rel(0.8)),
axis.ticks.y = element_blank(),
panel.background = element_blank(),
panel.grid = element_blank(),
legend.position="none",
legend.text=element_text(size=15),
legend.title=element_blank(),
legend.background=element_blank(),
panel.border = element_blank()
)
}
io <- list()
io$basedir <- "/Users/ricard/data/gastrulation"
io$sample_metadata <- paste0(io$basedir,"/sample_metadata_scNMT.txt")
io$rna.infile <- paste(io$basedir,"rna/parsed/SingleCellExperiment.rds",sep="/")
io$outdir <- "/Users/ricard/gastrulation/rna/plot_example/out"
## Define options
opts <- list()
opts$stage_lineage <- c(
"E4.5_EPI","E4.5_PE",
"E5.5_EPI","E5.5_PE",
"E6.5_EPI","E6.5_PS", "E6.5_VE",
"E7.5_Ectoderm","E7.5_Mesoderm","E7.5_Endoderm"
)
# Define which cells to use
opts$cells <- fread(io$sample_metadata, header=T) %>%
.[,stage_lineage:=paste(stage,lineage,sep="_")] %>%
.[pass_rnaQC==T & outlier==F & stage_lineage%in%opts$stage_lineage,id_rna]
sample_metadata <- fread(io$sample_metadata) %>% .[id_rna %in% opts$cells] %>%
.[,stage_lineage:=paste(stage,lineage,sep="_")]
# Load SCEset object
sce <- readRDS(io$rna.infile)# %>% toSingleCellExperiment()
# Filter cells
sce <- sce[,colnames(sce) %in% opts$cells]
# Remove duplicated ensembl IDs and spike ins
# rowData(sce) <- GRanges(rowData(sce))
# sce <- sce[!duplicated(rowData(sce)$ens_id),]
# sce <- sce[!is.na(rowData(sce)$ens_id),]
# Extract feature metadata to do the overlap
# rna_metadata <- rowData(sce) %>% as.data.frame %>% tibble::rownames_to_column("gene") %>% as.data.table %>%
#   .[,c("chr","start","end","gene","ens_id")]  %>%
#   .[,chr:=as.factor(sub("chr","",chr))] %>%
#   setnames("ens_id","id")
# Create data.table from SCEset object
# rna <- scater::exprs(sce) %>% t %>% as.data.table(keep.rownames="id_rna") %>% melt(id.vars="id_rna", value.name="expr", variable.name="gene")# %>%
#   # merge(rowData(sce) %>% tibble::rownames_to_column("gene") %>% .[,c("gene","ens_id","chr")] %>% as.data.table %>% setnames("ens_id","id"))
rna <- exprs(sce) %>% t %>% as.data.table(keep.rownames="id_rna") %>% melt(id.vars="id_rna", value.name="expr", variable.name="id") %>%
merge(rowData(sce) %>% as.data.frame(row.names=rownames(sce)) %>% tibble::rownames_to_column("ens_id") %>% .[,c("symbol","ens_id")] %>% as.data.table %>% setnames("ens_id","id"))
# rna <- merge(rna, sample_metadata[,c("id_rna","stage_lineage")], by="id_rna")
rna <- merge(rna, sample_metadata[,c("id_rna","stage_lineage","stage")], by="id_rna")
gene_id <- "Otx2"
p <- ggplot(rna[symbol==gene_id], aes(x=stage_lineage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
gene_id <- "Pou3f1"
p <- ggplot(rna[symbol==gene_id], aes(x=stage_lineage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
gene_id <- "Sox1"
p <- ggplot(rna[symbol==gene_id], aes(x=stage_lineage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
gene_id <- "Sox2"
p <- ggplot(rna[symbol==gene_id], aes(x=stage_lineage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
out <- fread(cmd="zcat < /Users/ricard/data/gastrulation_norsync_stuff/rna/test/E6.5EPI_vs_E7.5Ect.txt.gz")
View(out)
# fwrite(out, file=paste0(io$outdir,"/E6.5EPI_vs_E6.5VE.tsv"), sep="\t", na="NA", quote=F)
# fwrite(out, file=paste0(io$outdir,"/E6.5EPI_vs_E6.5PS.tsv"), sep="\t", na="NA", quote=F)
out <- fread(cmd="zcat < /Users/ricard/data/gastrulation_norsync_stuff/rna/test/E6.5EPI_vs_E7.5Ect.txt.gz")
gene_id <- "Sox1"
p <- ggplot(rna[symbol==gene_id], aes(x=stage_lineage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
gene_id <- "Sp5"
p <- ggplot(rna[symbol==gene_id], aes(x=stage_lineage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
gene_id <- "Irx3"
p <- ggplot(rna[symbol==gene_id], aes(x=stage_lineage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
gene_id <- "Dppa5a"
p <- ggplot(rna[symbol==gene_id], aes(x=stage_lineage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
gene_id <- "Meis2"
p <- ggplot(rna[symbol==gene_id], aes(x=stage_lineage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
gene_id <- "Otx2"
p <- ggplot(rna[symbol==gene_id], aes(x=stage_lineage, y=expr)) +
geom_jitter(aes(color=stage), size=1.0) +
# geom_point(aes(color=stage), size=1.0) +
geom_violin(aes(fill=stage), alpha=0.5) +
# geom_boxplot(aes(fill=stage_lineage)) +
# stat_summary(aes(fill=stage_lineage), fun.data=MinMeanSEMMax, geom="boxplot") +
coord_cartesian(ylim=c(0,11)) +
boxplot_theme() +
labs(title=gene_id, x="",y="RNA expression") +
theme(
plot.title = element_text(size=rel(1.5), hjust=0.5, vjust=0),
axis.text.x = element_text(size=rel(1.3), angle=90, hjust=1, vjust=0.5)
)
print(p)
# pdf(paste0(io$outdir,"/rna_",gene_id,".pdf"), width=7, height=5, useDingbats = F)
# print(p)
# dev.off()
